#
# Makefile for building SWATVXD for Windows 3.x
#
#' $Header:   P:/PVCS/SWATVXD/MAKEFILE.__V   1.19   10 Aug 1998 10:48:42   BOB  $
#

.SUFFIXES: .exe .com .obj .asm .c .inc .h .lib

LD	=	link
LD386	=	link386

LFLAGS =	/NOI /NOE /NOD /MAP

NEWDIR=N
I=$(INCDIR)
O=RET\			# Directory for .OBJ files
R=			# Generic source directory
Q=$(MAXINC)
V=$(WINVXD)
VI=$(SDKINC)
SI=$(SWTINC)
S=$(SWATVXD)		# Main project source directory
P=$(R);$(S)	# Search sequence for source

MASMFLAGS=/p /Ml /Zd /DSWATVXD
ML=masm5

# Define macro LSTMAC so that we can tack it onto the end of ANY
# MASM command line, whether it is defined or empty.
!IFDEF LST
LSTMAC=,$(LST)\ \

!ELSE
LSTMAC=
!ENDIF

{$(S)}.asm{$(O)}.obj:
!IF "$(NEWDIR)" == "Y"
	copy %|dpF$(@D)\$(@F) $(@D)\.
!ELSE
	$(ML) $(MASMFLAGS) /I. /I$(I) /I$(Q) /IS:\BP.BOB /I$(S) /I$(SI) /I$(VI) %s,$(@D)\ $(LSTMAC);
!ENDIF

{$(R)}.asm{$(O)}.obj:
!IF "$(NEWDIR)" == "Y"
	copy %|dpF$(@D)\$(@F) $(@D)\.
!ELSE
	$(ML) $(MASMFLAGS) /I. /I$(I) /I$(Q) /IS:\BP.BOB /I$(S) /I$(SI) /I$(VI) %s,$(@D)\ $(LSTMAC);
!ENDIF

all:	swatvxd \
!IF "$(NEWDIR)" == "Y"
	NEWDIR	\
!ENDIF
	$(R)win.ssf

!IF "$(NEWDIR)" == "Y"
NEWDIR: 	{$(P)}MAKEFILE	{$(P)}PVCS.CFG
	$(COMSPEC) /c <<$(O)MAKEFILE.BAT
	xc/r/a/n/t $(**: =^
	xc/r/a/n/t )
<<KEEP

!ENDIF

zip:
	del swatvxd.zip
	pkzip -r -p swatvxd.zip

swatvxd:	$(O)swatvxd.exe $(BINDIR)swatvxd.exe

incver:
	incvers swatver.asm

DSCAN=-t$(R)={$$P)},$(S)={$$(P)},$(SI)=$$(SI) -p{$$(P)} {$(P)}*.asm {$(P)}*.inc

DEPSCAN: {$(P)}MAKEFILE
	depscan $(DSCAN) >$(O)svddep.inc

{$(P)}MAKEFILE: $(O)svddep.inc

!IF "$(NEWDIR)" != "Y"
!if [vdir -c $(O)]
!endif
!if exist ($(O)svddep.inc) == 0
!if [depscan $(DSCAN) >$(O)svddep.inc]
!endif
!endif
!include $(O)svddep.inc
!ENDIF

$(R)win.ssf:	$(O)swatvxd.exe swatvxd.wsg $(V)bcf\386max.map $(V)vmax.wsg
!IF "$(NEWDIR)" == "Y"
	copy $(S)win.ssf $(R).
!ELSE
	mapssf -o -t$*.ssf -wSWATVXD.WSG $(O)SWATVXD.MAP -w$(V)VMAX.WSG $(V)bcf\386max.MAP
	xc/r $(R)win.ssf $(BINDIR).
!ENDIF

$(O)swatvxd.ssf:	swatvxd.wsg $(O)swatvxd.exe
!IF "$(NEWDIR)" != "Y"
	mapssf -o -t$(O)SWATVXD.SSF -wSWATVXD.WSG $(O)SWATVXD.MAP
!ENDIF

386max.ssf: 386max.wsg $(V)bcf\386max.map
!IF "$(NEWDIR)" != "Y"
	mapssf -t386MAX.SSF -w386MAX.WSG $(V)bcf\386max.map
!ENDIF

$(BINDIR)swatvxd.exe: $(O)swatvxd.exe
!IF "$(NEWDIR)" != "Y"
	xc /r $** $@
!ENDIF

OBJS=		\
$(O)swatvxd.obj \
$(O)swat_flt.obj\
$(O)swat_led.obj\
$(O)swat_msg.obj\
$(O)swat_rmi.obj\
$(O)swat_svc.obj\
$(O)swat_sym.obj\
$(O)swatver.obj

$(O)swatvxd.exe:	$(OBJS) 	\
			{$(P)}swatvxd.def	\
			$(R)swatstub.exe	\
			{$(P)}makefile
!IF "$(NEWDIR)" == "Y"
	copy $(S)$(O)$(@B).EXE $(O).
	xc/r/a/n/t $(S)SWATVXD.WSG
	xc/r/a/n/t $(S)SWATSTUB.EXE
!ELSE
	$(LD386) @<<$(O)swatvxd.lnk
		$(OBJS: =+^
)
	$(O)swatvxd.exe /NOI /NOD /NOPACKCODE /SEG:32
	$(O)swatvxd.map /MAP

	$(S)swatvxd.def
<<KEEP
	addhdr /v:300 $(O)swatvxd.exe
####### mapsym32 $(O)swatvxd
	xc/r $(O)swatvxd.exe $(R).
!ENDIF

$(R)swatstub.exe:	$(O)swatstub.obj	\
			$(O)swatver.obj
!IF "$(NEWDIR)" == "N"
	$(LD) $(O)swatstub+$(O)swatver,,$(O)swatstub /NOI /MAP;
!ENDIF

$(O)swatvxd.obj:	{$(P)}swatvxd.asm	$(SWATVXD_ADEP) 	$(I)swatvxd.inc
$(O)swat_flt.obj:	{$(P)}swat_flt.asm	$(SWAT_FLT_ADEP)
$(O)swat_led.obj:	{$(P)}swat_led.asm	$(SWAT_LED_ADEP)
$(O)swat_msg.obj:	{$(P)}swat_msg.asm	$(SWAT_MSG_ADEP)
$(O)swat_rmi.obj:	{$(P)}swat_rmi.asm	$(SWAT_RMI_ADEP)
$(O)swat_svc.obj:	{$(P)}swat_svc.asm	$(SWAT_SVC_ADEP)
$(O)swat_sym.obj:	{$(P)}swat_sym.asm	$(SWAT_SYM_ADEP)
$(O)swatstub.obj:	{$(P)}swatstub.asm	$(SWATSTUB_ADEP)
$(O)swatver.obj:	{$(P)}swatver.asm	$(SWAT_VER_ADEP)
!IF "$(NEWDIR)" == "Y"
	copy %|dpF$(@D)\$(@F) $(@D)\.
!ELSE
	head -1 $**
	$(ML) $**,$(O); >NUL
!ENDIF

