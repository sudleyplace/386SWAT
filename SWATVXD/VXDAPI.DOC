Add PM API to SWATVXD

SWATVXD now has a PM API that Windows applications (like WINSWAT)
may call for Int 67h services.	There are no guard rails around
this API; specifically, we don't check for calls that SWAT won't
handle and will try to pass on to the previous Int 67h handler
(with unpredictable results).

C usage might be as follows:

char szMsg[] = "Test message\n";
int (PASCAL FAR *lpfn) (void) = NULL;

int
TestSwat( void ) {

	// Check for presence of SWATVXD with PM API
	if (!lpfn) {

		_asm {
			push	es;		// Save
			push	di;

			mov	ax,0x1684;	// Get VxD API entry point
			mov	bx,9216;	// SWATVXD ID
			int	0x2f;	// ES:DI ==> PM entry point or NULL

			mov	[word ptr lpfn + 0], di; // Save offset
			mov	[word ptr lpfn + 2], es; // ...  segment

			pop	di;		// Restore
			pop	es;
		}

	} // Check for API

	// Now add test string to SWAT's error log.
	if (lpfn) {
		_asm {
			mov	ax,0xDEF6;	// SWAT symbol functions
			mov	bl,6;		// Subfunction 6: display string
			_emit	0x66;
			push	si;		// PUSH ESI
			_emit	0x66;
			sub	si,si;		// SUB ESI,ESI
			lea	si,szMsg;	// DS:ESI ==> string to display
		}
		// The PM API far entry point is a call gate selector used to
		// switch from PL3 to PL0.  When we wake up on the PL0 side of
		// the wall, we can address the client registers via EBP, and
		// EBX will be the current VM handle.
		lpfn();
		_asm {
			_emit	0x66;
			pop	si;		// POP ESI
		}
	} // API present

} // TestSwat()

Files affected:

MAKEFILE	Update dependencies for SWATVXD.ASM.

SWAT_MSG.ASM	Change messages for standalone operation.

		Update copyright.

SWAT_RMI.ASM	Changes for standalone operation.  Note that we can't count
		on an Int 67h handler being present in the device SWAT case.

SWAT_SVC.ASM	Update copyright (which appears to be merely embedded in
		the data segment for identification purposes; it's not
		referenced or even labeled anywhere).

SWAT_SYM.ASM	Changes for standalone operation.

SWATSTUB.ASM	More standalone changes.

		Reorganized part of help text into 2 columns.  It still
		takes up multiple screens but at least the VxD services
		all fit on the last screen now.

SWATVER.ASM	Bump version and update copyright.

SWATVXD.ASM	Changes for standalone operation.

		Added protected mode API.

		Remove unused code.

		Fix problem with renamed SWAT flags.  We only need to
		set one of them, since we use Int 1 to activate SWAT.

		Make more symbols public.

SWATVXD.INC	Bump copyright.

VCPI.INC	Add return value comments (and fix some inaccuracies in the
		input descriptions) for DEF6 subfunctions.

