%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: pcip.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Bookman-Demi Bookman-Light Courier
%%DocumentPaperSizes: A4
%%EndComments
%DVIPSCommandLine: dvips -o pcip.ps pcip
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1996.11.23:1353
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginFont: Bookman-Demi
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndFont
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin @defspecial

 TeXDict begin /box{newpath 2 copy moveto 3 copy pop exch lineto 4
copy pop pop lineto 4 copy exch pop exch pop lineto closepath } bind
def /min{ 2 copy gt { exch } if pop } bind def/max{ 2 copy lt { exch
} if pop } bind def/roundedbox{/radius exch store 3 2 roll 2 copy min
radius sub /miny exch store max radius add /maxy exch store 2 copy
min radius sub /minx exch store max radius add /maxx exch store newpath
minx radius add miny moveto maxx miny maxx maxy radius arcto maxx maxy
minx maxy radius arcto minx maxy minx miny radius arcto minx miny maxx
miny radius arcto 16 {pop} repeat closepath }bind def /rectcartouche{box
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def /cartouche{roundedbox
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 300 300 (pcip.dvi) @start /Fa
1 16 df<03C00FF01FF83FFC7FFE7FFEFFFFFFFFFFFFFFFF7FFE7FFE3FFC1FF80FF003C0
10107E9115>15 D E /Fb 130[20 1[20 1[20 20 20 20 20 20
20 20 20 20 20 20 20 20 20 1[20 20 20 20 20 20 20 20
20 1[20 2[20 3[20 1[20 20 20 20 20 20 20 20 20 20 20
20 1[20 20 20 20 20 20 20 20 20 3[20 20 20 20 20 20 20
20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
1[20 20 20 33[{ TeXBase1Encoding ReEncodeFont }78 33.333334
/Courier rf /Fc 136[12 1[12 12 1[12 1[12 1[12 1[12 2[12
12 1[12 12 12 1[12 39[12 10[12 12 12 45[{
 TeXBase1Encoding ReEncodeFont }17 20.833334 /Courier
rf /Fd 135[12 16 1[14 8 11 9 1[13 12 14 3[6 6 14 2[11
1[11 13 12 12[13 3[13 3[12 18[13 2[13 4[13 1[12 5[6 6
40[{ TeXBase1Encoding ReEncodeFont }25 20.833334 /Bookman-Light
rf /Fe 134[26 1[33 25 27 19 22 19 2[26 28 42 14 27 1[15
28 24 1[24 27 24 25 24 12[29 1[32 1[27 6[17 2[28 1[32
31 30 63[31 2[{ TeXBase1Encoding ReEncodeFont }29 41.666669
/Bookman-Demi rf /Ff 135[21 2[25 14 19 16 1[23 21 25
35 11 2[11 25 20 1[19 23 19 23 22 12[23 3[23 3[22 2[13
5[28 20[12 46[{ TeXBase1Encoding ReEncodeFont }24 37.500000
/Bookman-Light rf /Fg 139[17 19 17 14[22 22 22 31[27
65[{ TeXBase1Encoding ReEncodeFont }7 37.500000 /Bookman-Demi
rf /Fh 131[25 2[25 25 25 25 25 25 25 25 1[25 25 25 25
25 2[25 25 25 25 25 25 25 25 25 3[25 1[25 25 25 25 25
25 25 25 25 25 1[25 25 25 25 25 25 1[25 25 25 25 25 25
25 25 25 25 7[25 1[25 25 4[25 25 25 25 25 2[25 25 40[{
 TeXBase1Encoding ReEncodeFont }60 41.666669 /Courier
rf /Fi 107[17 25[20 22 23 32 22 28 16 22 18 24 26 23
27 39 12 26 12 12 27 22 13 22 26 22 26 24 9[40 29 32
26 27 30 34 26 33 31 38 25 30 1[14 33 33 27 30 33 31
31 28 3[25 2[13 1[26 1[26 26 26 26 26 26 26 25 13 17
13 25 1[12 12 9 33 34[26 26 2[{ TeXBase1Encoding ReEncodeFont }70
41.666669 /Bookman-Light rf /Fj 135[36 1[36 39 27 31
27 1[38 37 41 60 3[22 1[35 1[35 38 35 1[35 13[39 2[39
3[38 2[24 4[47 44 21[22 45[{ TeXBase1Encoding ReEncodeFont }23
59.999974 /Bookman-Demi rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 0 118 a @beginspecial 97 @llx 57 @lly 427 @urx
380 @ury 283 @rhi @setspecial
%%BeginDocument: LinuxLogo.eps

/whitemask {
  1 setgray
  gsave
    1 setlinejoin
    0.23 setlinewidth
    stroke
  grestore
  fill
} def

/fillblack {
  0 setgray
  gsave
    0.0375 setlinewidth
    stroke
  grestore
  fill
} def

/blackline {
  0 setgray
  0.0425 setlinewidth
  stroke
} def

/colorappendages {
  0.8 0.4 0.4 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/colorletters {
  0.7 1 1 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/backwing {
  newpath
    1.3 2.2 moveto
    2.3 2.4 2.8 2.4 3.375 2.05 curveto % tail
    4.175 2.7 4.975 3.15 5.975 3.55 curveto % bottom
    4.3 5.2 4.6 7.0 5.0 8.0 curveto % front bottom
    5.1 8.2 5.1 8.8 5.0 9.0 curveto % elbow
    4.5 11.0 2.0 14.5 1.0 15.4 curveto % front top
    0.95 11.5 1.9 9.0 2.1 9.0 curveto % back top
    2.0 8.0 2.0 6.0 2.1 5.5 curveto % back middle
    2.1 5.0 1.7 3.5 1.3 2.2 curveto % back bottom
  closepath
} def

/frontwing {
  newpath
    3.0 1.4 moveto
    4.5 3.1 9.25 4.9 11.0 4.3 curveto
    13.0 4.0 15.0 4.0 18 4.5 curveto
    13.5 5.25 9.0 5.2 6.0 2.5 curveto
    5.0 2.3 4.0 1.6 3.0 1.4 curveto
  closepath
} def

/tail {
  newpath
    1.225 2.175 moveto
    0.0 2.0 lineto % top
    -0.05 1.975 -0.05 1.9 0.0 1.85 curveto % left corner
    1.0 0.45 lineto % rear
    1.1 0.3 1.2 0.325 1.4 0.4 curveto % bottom corner
    1.45 0.41 2.5 1.0 2.875 1.35 curveto % right edge
    2.1 1.1 2.0 1.1 1.9 1.1 curveto
    1.45 1.2 0.85 1.85 1.0 2.0 curveto
  closepath
} def

/fillet {
  newpath
    0.5 2.0 moveto
    4.0 3.0 lineto
    5.0 2.0 lineto
    1.5 0.65 lineto
  closepath
} def

/body {
  newpath
    2.5 1.1 moveto
    2.4 0.65 lineto
    2.5 0.6 lineto
    3.2 0.8 3.4 0.9 3.5 0.3 curveto
    3.6 0.25 lineto
    4.65 0.95 5.0 1.0 6.5 1.0 curveto
    7.2 0.895 7.0 1.2 8.15 0.8 curveto
    8.35 0.85 lineto % top of beak
    8.7 1.0 lineto % top of beak
    9.2 1.2 9.2 2.55 8.0 2.65 curveto % front of head
    7.0 2.75 7.0 2.9 6.275 3.3 curveto
} def

/eye {
  gsave
  newpath
    7.9 2.1 moveto
    8.1 2.1 8.25 1.75 8.2 1.7 curveto
    blackline
  newpath
    8.2 1.7 moveto
    8.35 1.0 8.7 1.895 8.2 1.7 curveto
    fillblack
  grestore
} def

/topbeak {
  newpath
    8.35 0.85 moveto
    8.57 0.67 8.675 0.6 8.9 0.275 curveto
    8.9 0.0 8.9 -0.01 8.85 -0.15 curveto
    9.25 0.25 9.15 0.4 9.0 0.5 curveto % bottom right
    8.95 0.525 8.65 0.725 8.7 1.0 curveto % top right
  closepath
} def

/bottombeak {
  newpath
    8.15 0.8 moveto
    8.55 0.15 8.25 -0.2 8.60 -0.125 curveto
    8.345 0.525 8.375 0.725 8.35 0.85 curveto % top right
    8.15 0.8 lineto
  closepath
} def

/rightleg {
  newpath
    3.5 0.3 moveto
    3.1 -0.1 lineto
    3.3 -1.0 lineto
    3.2 -1.2 lineto
    3.22 -1.21 lineto
    3.0 -1.8 lineto
    3.2 -1.8 lineto
    3.0 -2.25 lineto
    3.3 -2.0 lineto
    3.32 -2.15 lineto
    3.45 -1.5 lineto
    3.425 -1.0 lineto
    3.25 -0.15 lineto
    3.6 0.25 lineto
    3.5 0.3 lineto
  closepath
} def

/leftleg {
  newpath
    2.4 0.65 moveto
    2.0 0.25 lineto
    2.2 -0.65 lineto
    2.1 -0.85 lineto
    2.12 -0.86 lineto
    1.9 -1.45 lineto
    2.1 -1.45 lineto
    1.9 -1.9 lineto
    2.2 -1.65 lineto
    2.22 -1.8 lineto
    2.35 -1.15 lineto
    2.325 -0.65 lineto
    2.15 0.2 lineto
    2.5 0.6 lineto
    2.4 0.65 lineto
  closepath
} def

/bigL {
  newpath
    2.01 0 moveto
    9.65 0 lineto
    9.65 3 lineto
    5 3 lineto
    5 13 lineto
    2.01 13 lineto
  closepath
} def

/inuxOL {
  /oy 0.0 def
  /lw 0.5 def
  /lh 3.0 def
  /ls 0.5 def
  /cw 0.7 def
  /nadj 2.8 def
  /xadj 1.05 def
  /xsadj 0.7 def
  /ox { 9.65 ls add } def
  /cb { oy } def
  /ct { cb lh add } def
% I
  /il { ox } def
  /ir { il lw add } def
  newpath
    il cb moveto
    ir cb lineto
    ir ct lineto
    il ct lineto
    il cb lineto
% N
  /nl1 { ir ls add } def
  /nr1 { nl1 lw add } def
  /nt1 { ct nadj lw mul sub } def
  /nl2 { nr1 cw add } def
  /nr2 { nl2 lw add } def
  /nt2 { cb nadj lw mul add } def
    nl1 cb moveto
    nr1 cb lineto
    nr1 nt1 lineto
    nl2 cb lineto
    nr2 cb lineto
    nr2 ct lineto
    nl2 ct lineto
    nl2 nt2 lineto
    nr1 ct lineto
    nl1 ct lineto
    nl1 cb lineto
% U
  /ul1 { nr2 ls add } def
  /ur1 { ul1 lw add } def
  /uc { cb lw add } def
  /ul2 { ur1 cw add } def
  /ur2 { ul2 lw add } def
    ul1 cb moveto
    ur2 cb lineto
    ur2 ct lineto
    ul2 ct lineto
    ul2 uc lineto
    ur1 uc lineto
    ur1 ct lineto
    ul1 ct lineto
    ul1 cb lineto
% X
  /xw { lw xadj mul } def
  /xl1 { ur2 ls xsadj mul add } def
  /xr1 { xl1 xw add } def
  /xl2 { xr1 cw add } def
  /xr2 { xl2 xw add } def
  /xmc { cb lh 2 div add } def
  /xmm { xr1 cw 2 div add } def
  /xml { xmm xw 2 div sub } def
  /xmr { xml xw add } def
  /xmh { xw lh mul xw cw add div } def
  /xmb { xmc xmh 2 div sub } def
  /xmt { xmc xmh 2 div add } def
    xl1 cb moveto
    xr1 cb lineto
    xmm xmb lineto
    xl2 cb lineto
    xr2 cb lineto
    xmr xmc lineto
    xr2 ct lineto
    xl2 ct lineto
    xmm xmt lineto
    xr1 ct lineto
    xl1 ct lineto
    xml xmc lineto
    xl1 cb lineto
} def

/maskbird {
  backwing whitemask
  frontwing whitemask
  tail whitemask
  fillet whitemask
  body closepath whitemask
  topbeak whitemask
  bottombeak whitemask
  rightleg whitemask
  leftleg whitemask
} def

/drawcolorbird {
  backwing fillblack
  frontwing fillblack
  tail fillblack
  body blackline
  eye
  topbeak colorappendages
  bottombeak colorappendages
  rightleg colorappendages
  leftleg colorappendages
} def

/LinuxColorLogo {
  gsave
    bigL colorletters
    inuxOL colorletters
    maskbird
    drawcolorbird
  grestore
} def

100 100 translate 18 18 scale
LinuxColorLogo
showpage


%%EndDocument
 @endspecial 1179 w Fj(Linux-PCI)20 b(Support)p 0 142
1772 2 v 285 481 a(Pr)o(ogramming)g(PCI-Devices)e(under)j(Linux)692
571 y Fi(by)14 b(Claus)f(Schroeter)537 621 y Fh
(\(clausi@chemie.fu-berlin.de\))804 705 y Fg(Abstract)160
770 y Ff(This)k(document)h(is)g(intended)g(to)f(be)g(a)g(short)h
(tutorial)g(about)f(PCI)f(Programming)j(under)104 816
y(Linux.)c(It)d(describes)j(the)d(PCI)g(basics)h(and)e(its)i
(implementation)g(under)g(Linux.)0 909 y Fe(Introduction)h(to)f(PCI)59
1912 y @beginspecial 0 @llx 0 @lly 497 @urx 568 @ury
1700 @rwi @setspecial
%%BeginDocument: pcibus.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-29.0 589.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06299 0.06299 sc
15.000 slw
% Polyline
n 1801 676 m 3961 676 l  3961 2071 l  1801 2071 l  clp  gs col0 s gr 
% Polyline
n 5086 631 m 7381 631 l  7381 2071 l  5086 2071 l  clp  gs col0 s gr 
% Polyline
n 1396 361 m 7741 361 l  7741 2431 l  1396 2431 l  clp  gs col0 s gr 
/Helvetica-Bold findfont 300.00 scalefont setfont
2521 1486 m
gs 1 -1 sc (CPU) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
5716 1486 m
gs 1 -1 sc (Memory) col0 show gr
165.000 slw
% Polyline
n 810 5670 m 8055 5670 l  gs col6 s gr 
15.000 slw
% Polyline
n 1035 5985 m 1038 5357 l  492 5668 l  clp gs /PC [[1.00 1.00 0.00] [1.00 1.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 32.80 357.13] PATmp PATsp ef gr PATusp  gs col6 s gr 
% Polyline
n 7785 5985 m 7782 5357 l  8328 5668 l  clp gs /PC [[1.00 1.00 0.00] [1.00 1.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 518.80 357.13] PATmp PATsp ef gr PATusp  gs col6 s gr 
% Polyline
n 1170 6930 m 2205 6930 l  2205 9315 l  1170 9315 l  clp  gs col0 s gr 
% Polyline
n 2565 6930 m 3600 6930 l  3600 9315 l  2565 9315 l  clp  gs col0 s gr 
% Polyline
n 6615 6930 m 7650 6930 l  7650 9315 l  6615 9315 l  clp  gs col0 s gr 
% Polyline
n 1710 5760 m 1710 6930 l  gs col0 s gr 
n 1650.00 6000.00 m 1710.00 5760.00 l 1770.00 6000.00 l  1710.50 6000.50 l 1650.00 6000.00 l clp gs 0.00 setgray ef gr gs col0 s gr
n 1770.00 6690.00 m 1710.00 6930.00 l 1650.00 6690.00 l  1710.50 6690.50 l 1770.00 6690.00 l clp gs 0.00 setgray ef gr gs col0 s gr
% Polyline
n 3105 5760 m 3105 6930 l  gs col0 s gr 
n 3045.00 6000.00 m 3105.00 5760.00 l 3165.00 6000.00 l  3105.50 6000.50 l 3045.00 6000.00 l clp gs 0.00 setgray ef gr gs col0 s gr
n 3165.00 6690.00 m 3105.00 6930.00 l 3045.00 6690.00 l  3105.50 6690.50 l 3165.00 6690.00 l clp gs 0.00 setgray ef gr gs col0 s gr
% Polyline
n 7110 5760 m 7110 6930 l  gs col0 s gr 
n 7050.00 6000.00 m 7110.00 5760.00 l 7170.00 6000.00 l  7110.50 6000.50 l 7050.00 6000.00 l clp gs 0.00 setgray ef gr gs col0 s gr
n 7170.00 6690.00 m 7110.00 6930.00 l 7050.00 6690.00 l  7110.50 6690.50 l 7170.00 6690.00 l clp gs 0.00 setgray ef gr gs col0 s gr
% Polyline
n 4500 4455 m 4500 5580 l  gs col0 s gr 
n 4440.00 4695.00 m 4500.00 4455.00 l 4560.00 4695.00 l  4500.50 4695.50 l 4440.00 4695.00 l clp gs 0.00 setgray ef gr gs col0 s gr
n 4560.00 5340.00 m 4500.00 5580.00 l 4440.00 5340.00 l  4500.50 5340.50 l 4560.00 5340.00 l clp gs 0.00 setgray ef gr gs col0 s gr
% Polyline
n 3150 3330 m 5940 3330 l  5940 4455 l  3150 4455 l  clp  gs col0 s gr 
% Polyline
n 4500 2430 m 4500 3330 l  gs col0 s gr 
n 4440.00 2670.00 m 4500.00 2430.00 l 4560.00 2670.00 l  4500.50 2670.50 l 4440.00 2670.00 l clp gs 0.00 setgray ef gr gs col0 s gr
n 4560.00 3090.00 m 4500.00 3330.00 l 4440.00 3090.00 l  4500.50 3090.50 l 4560.00 3090.00 l clp gs 0.00 setgray ef gr gs col0 s gr
% Polyline
n 3960 1305 m 5085 1305 l  gs col0 s gr 
n 4200.00 1365.00 m 3960.00 1305.00 l 4200.00 1245.00 l  4200.50 1305.50 l 4200.00 1365.00 l clp gs 0.00 setgray ef gr gs col0 s gr
n 4845.00 1245.00 m 5085.00 1305.00 l 4845.00 1365.00 l  4845.50 1305.50 l 4845.00 1245.00 l clp gs 0.00 setgray ef gr gs col0 s gr
/Helvetica-Bold findfont 300.00 scalefont setfont
4230 8190 m
gs 1 -1 sc (. . . . . . . . . . . . .) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
3690 4005 m
gs 1 -1 sc (PCI-Bridge) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
1665 5400 m
gs 1 -1 sc (PCI-Bus) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
1440 7425 m
gs 1 -1 sc (PCI) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
1440 7839 m
gs 1 -1 sc (#0) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
6840 7425 m
gs 1 -1 sc (PCI) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
6840 7839 m
gs 1 -1 sc (#n) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
2835 7470 m
gs 1 -1 sc (PCI) col0 show gr
/Helvetica-Bold findfont 300.00 scalefont setfont
2835 7884 m
gs 1 -1 sc (#1) col0 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 0 2003 a Fi(Figure)25 b(1:)39 b(The)24 b(Architecture)g
(of)h(the)f(PCI)0 2053 y(Subsystem)868 1039 y(The)29
b(Peripheral)g(Component)f(Interconnect)h(-)868 1089
y(Bus)17 b(\(PCI\))h(today)f(is)g(present)g(in)h(a)f(wide)g(variety)868
1138 y(of)f(microcomputers)g(ranging)h(from)g(Intel-based)868
1188 y(PC)e(architectures)f(to)h(DEC-Alpha-based)e(work-)868
1238 y(stations.)39 b(The)21 b(main)g(dif)q(ference)g(between)f(the)868
1288 y(old)f(fashioned)h(ISA-Bus)f(and)g(PCI)f(is)h(the)f(com-)868
1338 y(plete)e(separation)g(of)h(the)f(Bus-subsystem)f(from)868
1388 y(the)e(Memory)h(Subsystem.)i(The)c(CPU)h(communi-)868
1437 y(cates)18 b(with)j(the)e(PCI)g(subsystem)f(using)j(a)e(spe-)868
1487 y(cial)k(chipset)e(known)i(as)f(PCI-Bridge.)42 b(This)22
b(is)868 1537 y(an)12 b(intelligent)g(controller)n(,)h(that)e(handles)g
(all)g(nec-)868 1587 y(essary)17 b(tasks)f(to)h(transfer)g(data)g(from)
h(or)g(to)f(the)868 1637 y(CPU)e(or)h(the)f(Memory)h(Subsystem.)21
b(On)16 b(PCI)f(the)868 1686 y(adresses)g(and)h(data)f(are)i
(transferred)f(as)f(seper)s(-)868 1736 y(ate)23 b(chunks)f(over)h(the)f
(bus)h(because)e(all)j(bus-)868 1786 y(lines)h(can)f(be)f(used)g
(either)h(as)f(adress-)g(or)h(as)868 1836 y(data-lines.)16
b(In)11 b(special)e(cases)g(only)j(one)e(start)g(ad-)868
1886 y(dress)i(is)h(transferred)g(followed)i(by)e(a)g(whole)h(data)868
1936 y(block.)43 b(T)q(o)22 b(deter)q(mine)g(the)g(address)f(for)i
(each)868 1985 y(single)12 b(data-word)g(the)f(PCI-Bridge)f(and)i(the)e
(PCI-)868 2035 y(Adapter)15 b(increment)h(inter)q(nal)h(counters,)f(so)
f(the)868 2085 y(address)k(is)h(calculated)g(while)h(the)f(data)g
(words)868 2135 y(are)g(transmitted.)36 b(This)20 b(so)g(called)f
(\224burst\224)g(cy-)0 2185 y(cle)c(speeds)e(up)i(the)f(transfer)i
(signi\002cantly)h(\(up)e(to)g(266Mbyte/sec)e(for)j(a)f(64bit)f
(data-transfer\).)0 2234 y(Thanks)i(to)g(the)f(intelligent)j(handling)g
(of)f(this)f(tasks)f(the)g(programmer)i(need)f(not)g(to)g(take)f(care)0
2284 y(about)e(all)i(this)e(stuf)q(f.)0 2334 y(A)h(schematic)e(view)h
(of)h(the)f(PCI)g(subsystem)f(is)h(depicted)e(in)k(Figure)f(1.)0
2384 y(The)e(PCI)g(design)g(forces)g(Hardware)h(designers)f(to)g(use)g
(a)g(standardized)g(inter)q(face)g(for)h(PCI-Board)0
2434 y(access)h(and)i(control.)25 b(Each)16 b(bus)g(device)e(has)i(its)
f(own)i(265byte)e(space)f(of)j(Memory)f(for)h(con\002g-)0
2483 y(uration)h(purposes)d(that)h(can)h(be)f(accessed)d(through)19
b(the)d(CONFIG)p 1248 2483 13 2 v 14 w(ADDRESS)i(and)e(the)g(CON-)0
2533 y(FIG)p 76 2533 V 15 w(DATA)d(registers.)k(On)c(system)f(startup)g
(the)h(BIOS)g(uses)f(the)h(device)e(con\002guration)k(block)e(to)0
2583 y(set)e(the)h(dif)q(ferent)h(board)f(properties)f(as)h(IRQ)g(line)
h(and)f(base)f(address)g(for)i(example.)j(No)c(jumpers)0
2633 y(need)f(to)g(be)g(placed)f(in)i(the)g(right)g(places,)f(so)g(IRQ)
h(or)g(address)e(con\003icts)h(are)g(no)h(longer)h(a)e(problem)0
2683 y(with)j(PCI.)f(This)h(feature)f(is)h(commonly)g(known)h(as)e
(Plug&Play)i(functionality.)p 0 2768 1772 2 v 478 2817
a Fd(The)6 b(Linux)g(Lab)h(Project)g(whitepapers)f(11/1996)g(\()p
Fc(http://w)q(ww)q(.ll)q(p.)q(fu)q(-b)q(er)q(lin)q(.d)q(e/)q
Fd(\))p eop
%%Page: 2 2
2 1 bop 0 118 a @beginspecial 97 @llx 57 @lly 427 @urx
380 @ury 283 @rhi @setspecial
%%BeginDocument: LinuxLogo.eps

/whitemask {
  1 setgray
  gsave
    1 setlinejoin
    0.23 setlinewidth
    stroke
  grestore
  fill
} def

/fillblack {
  0 setgray
  gsave
    0.0375 setlinewidth
    stroke
  grestore
  fill
} def

/blackline {
  0 setgray
  0.0425 setlinewidth
  stroke
} def

/colorappendages {
  0.8 0.4 0.4 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/colorletters {
  0.7 1 1 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/backwing {
  newpath
    1.3 2.2 moveto
    2.3 2.4 2.8 2.4 3.375 2.05 curveto % tail
    4.175 2.7 4.975 3.15 5.975 3.55 curveto % bottom
    4.3 5.2 4.6 7.0 5.0 8.0 curveto % front bottom
    5.1 8.2 5.1 8.8 5.0 9.0 curveto % elbow
    4.5 11.0 2.0 14.5 1.0 15.4 curveto % front top
    0.95 11.5 1.9 9.0 2.1 9.0 curveto % back top
    2.0 8.0 2.0 6.0 2.1 5.5 curveto % back middle
    2.1 5.0 1.7 3.5 1.3 2.2 curveto % back bottom
  closepath
} def

/frontwing {
  newpath
    3.0 1.4 moveto
    4.5 3.1 9.25 4.9 11.0 4.3 curveto
    13.0 4.0 15.0 4.0 18 4.5 curveto
    13.5 5.25 9.0 5.2 6.0 2.5 curveto
    5.0 2.3 4.0 1.6 3.0 1.4 curveto
  closepath
} def

/tail {
  newpath
    1.225 2.175 moveto
    0.0 2.0 lineto % top
    -0.05 1.975 -0.05 1.9 0.0 1.85 curveto % left corner
    1.0 0.45 lineto % rear
    1.1 0.3 1.2 0.325 1.4 0.4 curveto % bottom corner
    1.45 0.41 2.5 1.0 2.875 1.35 curveto % right edge
    2.1 1.1 2.0 1.1 1.9 1.1 curveto
    1.45 1.2 0.85 1.85 1.0 2.0 curveto
  closepath
} def

/fillet {
  newpath
    0.5 2.0 moveto
    4.0 3.0 lineto
    5.0 2.0 lineto
    1.5 0.65 lineto
  closepath
} def

/body {
  newpath
    2.5 1.1 moveto
    2.4 0.65 lineto
    2.5 0.6 lineto
    3.2 0.8 3.4 0.9 3.5 0.3 curveto
    3.6 0.25 lineto
    4.65 0.95 5.0 1.0 6.5 1.0 curveto
    7.2 0.895 7.0 1.2 8.15 0.8 curveto
    8.35 0.85 lineto % top of beak
    8.7 1.0 lineto % top of beak
    9.2 1.2 9.2 2.55 8.0 2.65 curveto % front of head
    7.0 2.75 7.0 2.9 6.275 3.3 curveto
} def

/eye {
  gsave
  newpath
    7.9 2.1 moveto
    8.1 2.1 8.25 1.75 8.2 1.7 curveto
    blackline
  newpath
    8.2 1.7 moveto
    8.35 1.0 8.7 1.895 8.2 1.7 curveto
    fillblack
  grestore
} def

/topbeak {
  newpath
    8.35 0.85 moveto
    8.57 0.67 8.675 0.6 8.9 0.275 curveto
    8.9 0.0 8.9 -0.01 8.85 -0.15 curveto
    9.25 0.25 9.15 0.4 9.0 0.5 curveto % bottom right
    8.95 0.525 8.65 0.725 8.7 1.0 curveto % top right
  closepath
} def

/bottombeak {
  newpath
    8.15 0.8 moveto
    8.55 0.15 8.25 -0.2 8.60 -0.125 curveto
    8.345 0.525 8.375 0.725 8.35 0.85 curveto % top right
    8.15 0.8 lineto
  closepath
} def

/rightleg {
  newpath
    3.5 0.3 moveto
    3.1 -0.1 lineto
    3.3 -1.0 lineto
    3.2 -1.2 lineto
    3.22 -1.21 lineto
    3.0 -1.8 lineto
    3.2 -1.8 lineto
    3.0 -2.25 lineto
    3.3 -2.0 lineto
    3.32 -2.15 lineto
    3.45 -1.5 lineto
    3.425 -1.0 lineto
    3.25 -0.15 lineto
    3.6 0.25 lineto
    3.5 0.3 lineto
  closepath
} def

/leftleg {
  newpath
    2.4 0.65 moveto
    2.0 0.25 lineto
    2.2 -0.65 lineto
    2.1 -0.85 lineto
    2.12 -0.86 lineto
    1.9 -1.45 lineto
    2.1 -1.45 lineto
    1.9 -1.9 lineto
    2.2 -1.65 lineto
    2.22 -1.8 lineto
    2.35 -1.15 lineto
    2.325 -0.65 lineto
    2.15 0.2 lineto
    2.5 0.6 lineto
    2.4 0.65 lineto
  closepath
} def

/bigL {
  newpath
    2.01 0 moveto
    9.65 0 lineto
    9.65 3 lineto
    5 3 lineto
    5 13 lineto
    2.01 13 lineto
  closepath
} def

/inuxOL {
  /oy 0.0 def
  /lw 0.5 def
  /lh 3.0 def
  /ls 0.5 def
  /cw 0.7 def
  /nadj 2.8 def
  /xadj 1.05 def
  /xsadj 0.7 def
  /ox { 9.65 ls add } def
  /cb { oy } def
  /ct { cb lh add } def
% I
  /il { ox } def
  /ir { il lw add } def
  newpath
    il cb moveto
    ir cb lineto
    ir ct lineto
    il ct lineto
    il cb lineto
% N
  /nl1 { ir ls add } def
  /nr1 { nl1 lw add } def
  /nt1 { ct nadj lw mul sub } def
  /nl2 { nr1 cw add } def
  /nr2 { nl2 lw add } def
  /nt2 { cb nadj lw mul add } def
    nl1 cb moveto
    nr1 cb lineto
    nr1 nt1 lineto
    nl2 cb lineto
    nr2 cb lineto
    nr2 ct lineto
    nl2 ct lineto
    nl2 nt2 lineto
    nr1 ct lineto
    nl1 ct lineto
    nl1 cb lineto
% U
  /ul1 { nr2 ls add } def
  /ur1 { ul1 lw add } def
  /uc { cb lw add } def
  /ul2 { ur1 cw add } def
  /ur2 { ul2 lw add } def
    ul1 cb moveto
    ur2 cb lineto
    ur2 ct lineto
    ul2 ct lineto
    ul2 uc lineto
    ur1 uc lineto
    ur1 ct lineto
    ul1 ct lineto
    ul1 cb lineto
% X
  /xw { lw xadj mul } def
  /xl1 { ur2 ls xsadj mul add } def
  /xr1 { xl1 xw add } def
  /xl2 { xr1 cw add } def
  /xr2 { xl2 xw add } def
  /xmc { cb lh 2 div add } def
  /xmm { xr1 cw 2 div add } def
  /xml { xmm xw 2 div sub } def
  /xmr { xml xw add } def
  /xmh { xw lh mul xw cw add div } def
  /xmb { xmc xmh 2 div sub } def
  /xmt { xmc xmh 2 div add } def
    xl1 cb moveto
    xr1 cb lineto
    xmm xmb lineto
    xl2 cb lineto
    xr2 cb lineto
    xmr xmc lineto
    xr2 ct lineto
    xl2 ct lineto
    xmm xmt lineto
    xr1 ct lineto
    xl1 ct lineto
    xml xmc lineto
    xl1 cb lineto
} def

/maskbird {
  backwing whitemask
  frontwing whitemask
  tail whitemask
  fillet whitemask
  body closepath whitemask
  topbeak whitemask
  bottombeak whitemask
  rightleg whitemask
  leftleg whitemask
} def

/drawcolorbird {
  backwing fillblack
  frontwing fillblack
  tail fillblack
  body blackline
  eye
  topbeak colorappendages
  bottombeak colorappendages
  rightleg colorappendages
  leftleg colorappendages
} def

/LinuxColorLogo {
  gsave
    bigL colorletters
    inuxOL colorletters
    maskbird
    drawcolorbird
  grestore
} def

100 100 translate 18 18 scale
LinuxColorLogo
showpage


%%EndDocument
 @endspecial 1179 w Fj(Linux-PCI)20 b(Support)p 0 142
1772 2 v 0 255 a Fe(First)14 b(Contact)g(with)h(the)f(PCI)g(subsystem)0
335 y Fi(T)q(o)h(get)g(an)h(impression)h(how)f(linux)h(sees)d(the)h
(PCI)h(bus)f(in)h(your)h(computer)e(try)g(getting)i(the)e(PCI)0
385 y(bus)d(con\002guration)h(from)g(the)f(ker)q(nel)g(with)h
Fh(cat)25 b(/proc/pci)p Fi(.)16 b(If)c(everything)h(works)f(OK)g(you)h
(will)0 434 y(\(hopefully\))j(see:)p 709 484 355 6 v
0 565 a Fb(PCI)k(devices)f(found:)40 605 y(Bus)39 b(0,)20
b(device)40 b(12,)19 b(function)40 b(0:)80 644 y(SCSI)19
b(storage)h(controller:)f(Adaptec)g(AIC-7881U)g(\(rev)h(0\).)120
683 y(Medium)f(devsel.)39 b(Fast)20 b(back-to-back)f(capable.)39
b(IRQ)20 b(11.)120 723 y(Master)f(Capable.)39 b(Latency=32.)g(Min)20
b(Gnt=8.Max)f(Lat=8.)120 762 y(I/O)g(at)h(0xd800.)120
802 y(Non-prefetchable)e(32)i(bit)g(memory)f(at)h(0xf7fff000.)40
841 y(Bus)39 b(0,)20 b(device)40 b(11,)19 b(function)40
b(0:)80 881 y(VGA)19 b(compatible)h(controller:)f(S3)g(Inc.)h(Vision)g
(968)f(\(rev)h(0\).)120 920 y(Medium)f(devsel.)39 b(IRQ)20
b(10.)120 959 y(Non-prefetchable)e(32)i(bit)g(memory)f(at)h
(0xf2000000.)40 999 y(Bus)39 b(0,)20 b(device)40 b(10,)19
b(function)40 b(0:)80 1038 y(Ethernet)19 b(controller:)g(3Com)h(3C590)f
(10bT)h(\(rev)g(0\).)120 1078 y(Medium)f(devsel.)39 b(IRQ)20
b(12.)40 b(Master)19 b(Capable.)39 b(Latency=248.)g(Min)20
b(Gnt=3.Max)f(Lat=8.)120 1117 y(I/O)g(at)h(0xe000.)40
1157 y(Bus)39 b(0,)20 b(device)60 b(7,)19 b(function)40
b(2:)80 1196 y(Unknown)19 b(class:)h(Intel)f(Unknown)h(device)f(\(rev)h
(0\).)120 1235 y(Vendor)f(id=8086.)g(Device)h(id=7020.)120
1275 y(Medium)f(devsel.)39 b(Fast)20 b(back-to-back)f(capable.)39
b(IRQ)20 b(9.)40 b(Master)19 b(Capable.)39 b(Latency=32.)120
1314 y(I/O)19 b(at)h(0xe400.)40 1354 y(Bus)39 b(0,)20
b(device)60 b(7,)19 b(function)40 b(1:)80 1393 y(IDE)19
b(interface:)h(Intel)f(82371SB)h(Triton)f(II)h(PIIX)f(\(rev)h(0\).)120
1433 y(Medium)f(devsel.)39 b(Fast)20 b(back-to-back)f(capable.)39
b(Master)20 b(Capable.)39 b(Latency=32.)120 1472 y(I/O)19
b(at)h(0xe800.)40 1512 y(Bus)39 b(0,)20 b(device)60 b(7,)19
b(function)40 b(0:)80 1551 y(ISA)19 b(bridge:)h(Intel)f(82371SB)h
(Triton)f(II)h(PIIX)g(\(rev)f(0\).)120 1590 y(Medium)g(devsel.)39
b(Fast)20 b(back-to-back)f(capable.)39 b(Master)20 b(Capable.)39
b(No)20 b(bursts.)40 1630 y(Bus)39 b(0,)20 b(device)60
b(0,)19 b(function)40 b(0:)80 1669 y(Host)19 b(bridge:)h(Intel)f
(82439HX)h(Triton)f(II)h(\(rev)g(1\).)120 1709 y(Medium)f(devsel.)39
b(Master)20 b(Capable.)39 b(Latency=32.)0 1839 y Fi(All)23
b(devices)d(that)i(are)g(known)h(to)f(Linux)h(you)0 1889
y(will)f(see)d(at)g Fh(/proc/pci)p Fi(.)37 b(Each)20
b(device)e(con-)0 1939 y(\002guration)13 b(block)f(is)g(assigned)g(to)g
(a)f(device)g(and)0 1989 y(a)17 b(function)i(ID.)f(T)q(o)f(identify)h
(a)f(certain)h(device)0 2039 y(while)h(driver)f(writing)i(you)f(will)h
(at)e(least)f(have)0 2089 y(to)c(know)h(the)e(vendor)s(-)h(and)g(the)g
(device-id)e(that)0 2138 y(is)j(statically)h(stored)f(in)h(the)f
(device)f(con\002gura-)0 2188 y(tion)19 b(block)g(\(as)g(discussed)d
(later)j(on\).)34 b(Driver)0 2238 y(writers)25 b(nor)q(mally)j(need)c
(to)h(know)h(only)g(the)0 2288 y(base)d(address)g(of)h(the)g(device)e
(and)i(the)g(IRQ)0 2338 y(line)f(that)g(the)f(device)f(is)h(using.)45
b(As)22 b(shown)0 2387 y(above)c(all)i(device)d(id's)i(or)g(device)f
(class)g(\002elds)0 2437 y(that)k(cannot)h(be)e(resolved)h(within)h
(the)f(linux)0 2487 y(PCI-subsystem)9 b(are)j(printed)g(as)f(plain)i
(values,)0 2537 y(so)18 b(driver)g(writers)h(have)f(a)g(simple)g
(chance)g(to)0 2587 y(identify)i(their)f(card)g(of)h(choice)e(without)j
(writ-)907 1839 y(ing)14 b(a)f(special)g(tool)h(to)g(do)f(this)g(task.)
907 1916 y Fe(The)h(Device)h(Con\002guration)f(Block)907
1996 y Fi(As)44 b(mentioned)h(above)f(each)g(PCI-device)907
2045 y(has)e(its)g(own)h(assigned)f(256bytes)e(PCI-)907
2095 y(con\002guration)17 b(memory)f(block)g(that)g(is)g(acces-)907
2145 y(sible)e(through)i(PCI-BIOS)e(routines.)21 b(The)14
b(\002rst)907 2195 y(64bytes)23 b(of)h(this)h(reserved)e(space)g(are)i
(used)907 2245 y(to)14 b(identify)h(and)g(con\002gure)g(the)f(basic)g
(proper)s(-)907 2294 y(ties)f(for)i(the)f(PCI-Device.)j(On)e(system)e
(startup)907 2344 y(some)18 b(of)i(the)f(parameters)g(in)h(the)f
(con\002gura-)907 2394 y(tion)13 b(block)g(are)g(replaced)f(from)h(the)
g(Plug&Play)907 2444 y(BIOS)29 b(that)f(con\002gures)i(the)e(I/O)h(or)g
(Mem-)907 2494 y(ory)20 b(base)e(addresses)g(and)h(IRQ)h(lines)g(for)g
(the)907 2544 y(PCI-board)f(to)i(operate)e(correctly)i(with)g(other)907
2593 y(cards)16 b(in)i(the)f(PCI)g(or)g(ISA)h(slots.)28
b(The)17 b(con\002g-)907 2643 y(uration)k(blocks)f(of)h(the)g(PCI)f
(subsystem)f(can)907 2693 y(be)e(accessed)e(through)20
b(the)e Fh(CONFIG)p 1585 2693 13 2 v 14 w(ADDRESS)p 0
2768 1772 2 v 478 2817 a Fd(The)6 b(Linux)g(Lab)h(Project)g
(whitepapers)f(11/1996)g(\()p Fc(http://w)q(ww)q(.ll)q(p.)q(fu)q(-b)q
(er)q(lin)q(.d)q(e/)q Fd(\))p eop
%%Page: 3 3
3 2 bop 0 118 a @beginspecial 97 @llx 57 @lly 427 @urx
380 @ury 283 @rhi @setspecial
%%BeginDocument: LinuxLogo.eps

/whitemask {
  1 setgray
  gsave
    1 setlinejoin
    0.23 setlinewidth
    stroke
  grestore
  fill
} def

/fillblack {
  0 setgray
  gsave
    0.0375 setlinewidth
    stroke
  grestore
  fill
} def

/blackline {
  0 setgray
  0.0425 setlinewidth
  stroke
} def

/colorappendages {
  0.8 0.4 0.4 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/colorletters {
  0.7 1 1 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/backwing {
  newpath
    1.3 2.2 moveto
    2.3 2.4 2.8 2.4 3.375 2.05 curveto % tail
    4.175 2.7 4.975 3.15 5.975 3.55 curveto % bottom
    4.3 5.2 4.6 7.0 5.0 8.0 curveto % front bottom
    5.1 8.2 5.1 8.8 5.0 9.0 curveto % elbow
    4.5 11.0 2.0 14.5 1.0 15.4 curveto % front top
    0.95 11.5 1.9 9.0 2.1 9.0 curveto % back top
    2.0 8.0 2.0 6.0 2.1 5.5 curveto % back middle
    2.1 5.0 1.7 3.5 1.3 2.2 curveto % back bottom
  closepath
} def

/frontwing {
  newpath
    3.0 1.4 moveto
    4.5 3.1 9.25 4.9 11.0 4.3 curveto
    13.0 4.0 15.0 4.0 18 4.5 curveto
    13.5 5.25 9.0 5.2 6.0 2.5 curveto
    5.0 2.3 4.0 1.6 3.0 1.4 curveto
  closepath
} def

/tail {
  newpath
    1.225 2.175 moveto
    0.0 2.0 lineto % top
    -0.05 1.975 -0.05 1.9 0.0 1.85 curveto % left corner
    1.0 0.45 lineto % rear
    1.1 0.3 1.2 0.325 1.4 0.4 curveto % bottom corner
    1.45 0.41 2.5 1.0 2.875 1.35 curveto % right edge
    2.1 1.1 2.0 1.1 1.9 1.1 curveto
    1.45 1.2 0.85 1.85 1.0 2.0 curveto
  closepath
} def

/fillet {
  newpath
    0.5 2.0 moveto
    4.0 3.0 lineto
    5.0 2.0 lineto
    1.5 0.65 lineto
  closepath
} def

/body {
  newpath
    2.5 1.1 moveto
    2.4 0.65 lineto
    2.5 0.6 lineto
    3.2 0.8 3.4 0.9 3.5 0.3 curveto
    3.6 0.25 lineto
    4.65 0.95 5.0 1.0 6.5 1.0 curveto
    7.2 0.895 7.0 1.2 8.15 0.8 curveto
    8.35 0.85 lineto % top of beak
    8.7 1.0 lineto % top of beak
    9.2 1.2 9.2 2.55 8.0 2.65 curveto % front of head
    7.0 2.75 7.0 2.9 6.275 3.3 curveto
} def

/eye {
  gsave
  newpath
    7.9 2.1 moveto
    8.1 2.1 8.25 1.75 8.2 1.7 curveto
    blackline
  newpath
    8.2 1.7 moveto
    8.35 1.0 8.7 1.895 8.2 1.7 curveto
    fillblack
  grestore
} def

/topbeak {
  newpath
    8.35 0.85 moveto
    8.57 0.67 8.675 0.6 8.9 0.275 curveto
    8.9 0.0 8.9 -0.01 8.85 -0.15 curveto
    9.25 0.25 9.15 0.4 9.0 0.5 curveto % bottom right
    8.95 0.525 8.65 0.725 8.7 1.0 curveto % top right
  closepath
} def

/bottombeak {
  newpath
    8.15 0.8 moveto
    8.55 0.15 8.25 -0.2 8.60 -0.125 curveto
    8.345 0.525 8.375 0.725 8.35 0.85 curveto % top right
    8.15 0.8 lineto
  closepath
} def

/rightleg {
  newpath
    3.5 0.3 moveto
    3.1 -0.1 lineto
    3.3 -1.0 lineto
    3.2 -1.2 lineto
    3.22 -1.21 lineto
    3.0 -1.8 lineto
    3.2 -1.8 lineto
    3.0 -2.25 lineto
    3.3 -2.0 lineto
    3.32 -2.15 lineto
    3.45 -1.5 lineto
    3.425 -1.0 lineto
    3.25 -0.15 lineto
    3.6 0.25 lineto
    3.5 0.3 lineto
  closepath
} def

/leftleg {
  newpath
    2.4 0.65 moveto
    2.0 0.25 lineto
    2.2 -0.65 lineto
    2.1 -0.85 lineto
    2.12 -0.86 lineto
    1.9 -1.45 lineto
    2.1 -1.45 lineto
    1.9 -1.9 lineto
    2.2 -1.65 lineto
    2.22 -1.8 lineto
    2.35 -1.15 lineto
    2.325 -0.65 lineto
    2.15 0.2 lineto
    2.5 0.6 lineto
    2.4 0.65 lineto
  closepath
} def

/bigL {
  newpath
    2.01 0 moveto
    9.65 0 lineto
    9.65 3 lineto
    5 3 lineto
    5 13 lineto
    2.01 13 lineto
  closepath
} def

/inuxOL {
  /oy 0.0 def
  /lw 0.5 def
  /lh 3.0 def
  /ls 0.5 def
  /cw 0.7 def
  /nadj 2.8 def
  /xadj 1.05 def
  /xsadj 0.7 def
  /ox { 9.65 ls add } def
  /cb { oy } def
  /ct { cb lh add } def
% I
  /il { ox } def
  /ir { il lw add } def
  newpath
    il cb moveto
    ir cb lineto
    ir ct lineto
    il ct lineto
    il cb lineto
% N
  /nl1 { ir ls add } def
  /nr1 { nl1 lw add } def
  /nt1 { ct nadj lw mul sub } def
  /nl2 { nr1 cw add } def
  /nr2 { nl2 lw add } def
  /nt2 { cb nadj lw mul add } def
    nl1 cb moveto
    nr1 cb lineto
    nr1 nt1 lineto
    nl2 cb lineto
    nr2 cb lineto
    nr2 ct lineto
    nl2 ct lineto
    nl2 nt2 lineto
    nr1 ct lineto
    nl1 ct lineto
    nl1 cb lineto
% U
  /ul1 { nr2 ls add } def
  /ur1 { ul1 lw add } def
  /uc { cb lw add } def
  /ul2 { ur1 cw add } def
  /ur2 { ul2 lw add } def
    ul1 cb moveto
    ur2 cb lineto
    ur2 ct lineto
    ul2 ct lineto
    ul2 uc lineto
    ur1 uc lineto
    ur1 ct lineto
    ul1 ct lineto
    ul1 cb lineto
% X
  /xw { lw xadj mul } def
  /xl1 { ur2 ls xsadj mul add } def
  /xr1 { xl1 xw add } def
  /xl2 { xr1 cw add } def
  /xr2 { xl2 xw add } def
  /xmc { cb lh 2 div add } def
  /xmm { xr1 cw 2 div add } def
  /xml { xmm xw 2 div sub } def
  /xmr { xml xw add } def
  /xmh { xw lh mul xw cw add div } def
  /xmb { xmc xmh 2 div sub } def
  /xmt { xmc xmh 2 div add } def
    xl1 cb moveto
    xr1 cb lineto
    xmm xmb lineto
    xl2 cb lineto
    xr2 cb lineto
    xmr xmc lineto
    xr2 ct lineto
    xl2 ct lineto
    xmm xmt lineto
    xr1 ct lineto
    xl1 ct lineto
    xml xmc lineto
    xl1 cb lineto
} def

/maskbird {
  backwing whitemask
  frontwing whitemask
  tail whitemask
  fillet whitemask
  body closepath whitemask
  topbeak whitemask
  bottombeak whitemask
  rightleg whitemask
  leftleg whitemask
} def

/drawcolorbird {
  backwing fillblack
  frontwing fillblack
  tail fillblack
  body blackline
  eye
  topbeak colorappendages
  bottombeak colorappendages
  rightleg colorappendages
  leftleg colorappendages
} def

/LinuxColorLogo {
  gsave
    bigL colorletters
    inuxOL colorletters
    maskbird
    drawcolorbird
  grestore
} def

100 100 translate 18 18 scale
LinuxColorLogo
showpage


%%EndDocument
 @endspecial 1179 w Fj(Linux-PCI)20 b(Support)p 0 142
1772 2 v 0 195 a Fh(\(0xcf8\))28 b Fi(and)h(the)f Fh(CONFIG)p
554 195 13 2 v 14 w(DATA)d(\(0xcfc\))0 245 y Fi(registers)0
295 y(The)36 b(Linux)i(PCI-bios)e(support)g(is)h(imple-)0
345 y(mented)15 b(on)i(top)e(of)i(the)f(Bios32)f(routines)i(and)0
394 y(de\002nes)12 b(some)h(useful)g(routines)h(to)f(handle)h(the)0
444 y(PCI)j(con\002guration)h(block)f(and)h(con\002gure)f(the)0
494 y(PCI)k(subsystem.)38 b(Nor)q(mally)23 b(no)e(changes)g(in)0
544 y(the)d(con\002guration)j(block)d(are)h(necessary)f(be-)0
594 y(cause)f(the)h(BIOS)g(sets)e(up)i(all)h(parameters)e(to)0
643 y(operate)24 b(correctly.)52 b(Because)23 b(Linux)j(is)f(in-)0
693 y(tended)12 b(to)h(run)h(on)g(many)g(hardware)g(architec-)0
743 y(tures)i(it)h(is)g(recommended)f(to)h(use)f(this)h(func-)0
793 y(tions)23 b(instead)f(of)h(accessing)f(the)h(con\002gura-)0
843 y(tion)14 b(registers)f(directly.)0 892 y(Before)g(a)h(PCI-board)f
(can)g(be)g(used,)g(the)g(driver)0 942 y(has)e(to)h(deter)q(mine)f(the)
g(board)h(speci\002c)d(param-)0 992 y(eters)14 b(from)j(the)e
(con\002guration)i(block)e(and)h(set)0 1042 y(all)26
b(desired)e(options)h(to)f(operate)g(the)h(board)0 1092
y(correctly.)h(Nor)q(mally)19 b(this)d(task)g(is)g(done)g(by)h(a)0
1142 y(autodetect)10 b(routine)j(in)g(the)e(ker)q(nel)h(driver)g(that)0
1191 y(per)q(for)q(ms)i(the)f(following)k(tasks:)62 1258
y Fa(\017)k Fi(Check)16 b(if)i(the)g(PCI-Bios)e(Support)i(is)f(en-)1010
195 y(abled)j(in)g(the)f(ker)q(nel)h(and)g(the)g(BIOS)g(is)1010
245 y(present)13 b(with)h Fh(pcibios)p 1454 245 V 14
w(present\(\))969 335 y Fa(\017)20 b Fi(Get)82 b(the)h(con\002guration)
h(block)1010 384 y(for)66 b(the)e(desired)g(device)f(using)1010
434 y Fh(pcibios)p 1187 434 V 15 w(find)p 1302 434 V
14 w(device\(\))969 524 y Fa(\017)20 b Fi(Get)83 b(the)g(desired)f
(parameters)1010 574 y(from)41 b(the)e(con\002guration)i(block)e(us-)
1010 623 y(ing)70 b Fh(pcibios)p 1318 623 V 14 w(read)p
1432 623 V 15 w(config)p 1597 623 V 14 w(byte\(\))p Fi(,)1010
673 y Fh(pcibios)p 1187 673 V 15 w(read)p 1302 673 V
14 w(config)p 1466 673 V 15 w(word\(\))101 b Fi(or)1010
723 y Fh(pcibios)p 1187 723 V 15 w(read)p 1302 723 V
14 w(config)p 1466 723 V 15 w(dword\(\))79 b Fi(to)1010
773 y(get)13 b(8,16)g(or)h(32bit)f(parameter)f(values.)969
863 y Fa(\017)20 b Fi(Set)54 b(the)f(desired)g(parameters)g(in)1010
912 y(the)69 b(con\002guration)h(block)f(using)1010 962
y Fh(pcibios)p 1187 962 V 15 w(write)p 1327 962 V 14
w(config)p 1491 962 V 15 w(byte\(\))p Fi(,)1010 1012
y Fh(pcibios)p 1187 1012 V 15 w(write)p 1327 1012 V 14
w(config)p 1491 1012 V 15 w(word\(\))76 b Fi(or)1010
1062 y Fh(pcibios)p 1187 1062 V 15 w(write)p 1327 1062
V 14 w(config)p 1491 1062 V 15 w(dword\(\))907 1150 y
Fi(The)26 b(following)k(example)c(from)h(the)g(ne2000)907
1200 y(clone)21 b(driver)g(shows)g(how)i(this)e(task)f(is)i(per)s(-)907
1249 y(for)q(med)13 b(in)h(a)g(real)g(ker)q(nel)f(network)h(driver)m(.)
p 709 1355 355 6 v 0 1431 a Fb(#if)20 b(defined\(CONFIG_PCI\))80
1470 y(if)f(\(pcibios_present\(\)\))g({)159 1510 y(int)h(pci_index;)159
1549 y(for)g(\(pci_index)f(=)h(0;)g(pci_index)f(<)h(8;)g(pci_index++\))
f({)279 1589 y(unsigned)g(char)h(pci_bus,)f(pci_device_fn;)239
1628 y(unsigned)g(int)h(pci_ioaddr;)239 1707 y(/*)g(Currently)f(only)h
(Realtek)f(are)h(making)f(PCI)h(ne2k)g(clones.)f(*/)239
1747 y(if)h(\(pcibios_find_device)e(\(PCI_VENDOR_ID_REALTEK,)478
1786 y(PCI_DEVICE_ID_REALTEK_8029,)g(pci_index,)478 1825
y(&pci_bus,)h(&pci_device_fn\))g(!=)h(0\))359 1865 y(break;)119
b(/*)20 b(OK,)f(now)h(try)g(to)f(probe)h(for)g(std.)f(ISA)h(card)g(*/)
239 1944 y(pcibios_read_config_byte\(pci_bus,)e(pci_device_fn,)478
1983 y(PCI_INTERRUPT_LINE,)h(&pci_irq_line\);)239 2023
y(pcibios_read_config_dword\(pci_bus,)e(pci_device_fn,)478
2062 y(PCI_BASE_ADDRESS_0,)i(&pci_ioaddr\);)239 2141
y(/*)h(Strip)f(the)h(I/O)g(address)f(out)h(of)g(the)f(returned)h(value)
f(*/)239 2180 y(pci_ioaddr)g(&=)h(PCI_BASE_ADDRESS_IO_MASK;)239
2259 y(/*)g(Avoid)f(already)h(found)f(cards)h(from)g(previous)f
(ne_probe\(\))g(calls)h(*/)239 2299 y(if)g(\(check_region\(pci_ioaddr,)
e(NE_IO_EXTENT\)\))359 2338 y(continue;)239 2417 y(printk\("ne.c:)h
(PCI)h(BIOS)f(reports)h(ne2000)f(clone)h(at)g(i/o)f(\045#x,)h(irq)g
(\045d.\\n",)478 2456 y(pci_ioaddr,)f(pci_irq_line\);)239
2535 y(if)h(\(ne_probe1\(dev,)f(pci_ioaddr\))g(!=)h(0\))f({)120
b(/*)20 b(Shouldn't)f(happen.)g(*/)359 2575 y(printk\(KERN_ERR)f
("ne.c:)i(Probe)f(of)h(PCI)g(card)g(at)f(\045#x)h(failed.\\n",)f
(pci_ioaddr\);)359 2614 y(break;)119 b(/*)20 b(Hrmm,)f(try)h(to)g
(probe)f(for)h(ISA)g(card...)f(*/)239 2654 y(})p 0 2768
1772 2 v 478 2817 a Fd(The)6 b(Linux)g(Lab)h(Project)g(whitepapers)f
(11/1996)g(\()p Fc(http://w)q(ww)q(.ll)q(p.)q(fu)q(-b)q(er)q(lin)q(.d)q
(e/)q Fd(\))p eop
%%Page: 4 4
4 3 bop 0 118 a @beginspecial 97 @llx 57 @lly 427 @urx
380 @ury 283 @rhi @setspecial
%%BeginDocument: LinuxLogo.eps

/whitemask {
  1 setgray
  gsave
    1 setlinejoin
    0.23 setlinewidth
    stroke
  grestore
  fill
} def

/fillblack {
  0 setgray
  gsave
    0.0375 setlinewidth
    stroke
  grestore
  fill
} def

/blackline {
  0 setgray
  0.0425 setlinewidth
  stroke
} def

/colorappendages {
  0.8 0.4 0.4 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/colorletters {
  0.7 1 1 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/backwing {
  newpath
    1.3 2.2 moveto
    2.3 2.4 2.8 2.4 3.375 2.05 curveto % tail
    4.175 2.7 4.975 3.15 5.975 3.55 curveto % bottom
    4.3 5.2 4.6 7.0 5.0 8.0 curveto % front bottom
    5.1 8.2 5.1 8.8 5.0 9.0 curveto % elbow
    4.5 11.0 2.0 14.5 1.0 15.4 curveto % front top
    0.95 11.5 1.9 9.0 2.1 9.0 curveto % back top
    2.0 8.0 2.0 6.0 2.1 5.5 curveto % back middle
    2.1 5.0 1.7 3.5 1.3 2.2 curveto % back bottom
  closepath
} def

/frontwing {
  newpath
    3.0 1.4 moveto
    4.5 3.1 9.25 4.9 11.0 4.3 curveto
    13.0 4.0 15.0 4.0 18 4.5 curveto
    13.5 5.25 9.0 5.2 6.0 2.5 curveto
    5.0 2.3 4.0 1.6 3.0 1.4 curveto
  closepath
} def

/tail {
  newpath
    1.225 2.175 moveto
    0.0 2.0 lineto % top
    -0.05 1.975 -0.05 1.9 0.0 1.85 curveto % left corner
    1.0 0.45 lineto % rear
    1.1 0.3 1.2 0.325 1.4 0.4 curveto % bottom corner
    1.45 0.41 2.5 1.0 2.875 1.35 curveto % right edge
    2.1 1.1 2.0 1.1 1.9 1.1 curveto
    1.45 1.2 0.85 1.85 1.0 2.0 curveto
  closepath
} def

/fillet {
  newpath
    0.5 2.0 moveto
    4.0 3.0 lineto
    5.0 2.0 lineto
    1.5 0.65 lineto
  closepath
} def

/body {
  newpath
    2.5 1.1 moveto
    2.4 0.65 lineto
    2.5 0.6 lineto
    3.2 0.8 3.4 0.9 3.5 0.3 curveto
    3.6 0.25 lineto
    4.65 0.95 5.0 1.0 6.5 1.0 curveto
    7.2 0.895 7.0 1.2 8.15 0.8 curveto
    8.35 0.85 lineto % top of beak
    8.7 1.0 lineto % top of beak
    9.2 1.2 9.2 2.55 8.0 2.65 curveto % front of head
    7.0 2.75 7.0 2.9 6.275 3.3 curveto
} def

/eye {
  gsave
  newpath
    7.9 2.1 moveto
    8.1 2.1 8.25 1.75 8.2 1.7 curveto
    blackline
  newpath
    8.2 1.7 moveto
    8.35 1.0 8.7 1.895 8.2 1.7 curveto
    fillblack
  grestore
} def

/topbeak {
  newpath
    8.35 0.85 moveto
    8.57 0.67 8.675 0.6 8.9 0.275 curveto
    8.9 0.0 8.9 -0.01 8.85 -0.15 curveto
    9.25 0.25 9.15 0.4 9.0 0.5 curveto % bottom right
    8.95 0.525 8.65 0.725 8.7 1.0 curveto % top right
  closepath
} def

/bottombeak {
  newpath
    8.15 0.8 moveto
    8.55 0.15 8.25 -0.2 8.60 -0.125 curveto
    8.345 0.525 8.375 0.725 8.35 0.85 curveto % top right
    8.15 0.8 lineto
  closepath
} def

/rightleg {
  newpath
    3.5 0.3 moveto
    3.1 -0.1 lineto
    3.3 -1.0 lineto
    3.2 -1.2 lineto
    3.22 -1.21 lineto
    3.0 -1.8 lineto
    3.2 -1.8 lineto
    3.0 -2.25 lineto
    3.3 -2.0 lineto
    3.32 -2.15 lineto
    3.45 -1.5 lineto
    3.425 -1.0 lineto
    3.25 -0.15 lineto
    3.6 0.25 lineto
    3.5 0.3 lineto
  closepath
} def

/leftleg {
  newpath
    2.4 0.65 moveto
    2.0 0.25 lineto
    2.2 -0.65 lineto
    2.1 -0.85 lineto
    2.12 -0.86 lineto
    1.9 -1.45 lineto
    2.1 -1.45 lineto
    1.9 -1.9 lineto
    2.2 -1.65 lineto
    2.22 -1.8 lineto
    2.35 -1.15 lineto
    2.325 -0.65 lineto
    2.15 0.2 lineto
    2.5 0.6 lineto
    2.4 0.65 lineto
  closepath
} def

/bigL {
  newpath
    2.01 0 moveto
    9.65 0 lineto
    9.65 3 lineto
    5 3 lineto
    5 13 lineto
    2.01 13 lineto
  closepath
} def

/inuxOL {
  /oy 0.0 def
  /lw 0.5 def
  /lh 3.0 def
  /ls 0.5 def
  /cw 0.7 def
  /nadj 2.8 def
  /xadj 1.05 def
  /xsadj 0.7 def
  /ox { 9.65 ls add } def
  /cb { oy } def
  /ct { cb lh add } def
% I
  /il { ox } def
  /ir { il lw add } def
  newpath
    il cb moveto
    ir cb lineto
    ir ct lineto
    il ct lineto
    il cb lineto
% N
  /nl1 { ir ls add } def
  /nr1 { nl1 lw add } def
  /nt1 { ct nadj lw mul sub } def
  /nl2 { nr1 cw add } def
  /nr2 { nl2 lw add } def
  /nt2 { cb nadj lw mul add } def
    nl1 cb moveto
    nr1 cb lineto
    nr1 nt1 lineto
    nl2 cb lineto
    nr2 cb lineto
    nr2 ct lineto
    nl2 ct lineto
    nl2 nt2 lineto
    nr1 ct lineto
    nl1 ct lineto
    nl1 cb lineto
% U
  /ul1 { nr2 ls add } def
  /ur1 { ul1 lw add } def
  /uc { cb lw add } def
  /ul2 { ur1 cw add } def
  /ur2 { ul2 lw add } def
    ul1 cb moveto
    ur2 cb lineto
    ur2 ct lineto
    ul2 ct lineto
    ul2 uc lineto
    ur1 uc lineto
    ur1 ct lineto
    ul1 ct lineto
    ul1 cb lineto
% X
  /xw { lw xadj mul } def
  /xl1 { ur2 ls xsadj mul add } def
  /xr1 { xl1 xw add } def
  /xl2 { xr1 cw add } def
  /xr2 { xl2 xw add } def
  /xmc { cb lh 2 div add } def
  /xmm { xr1 cw 2 div add } def
  /xml { xmm xw 2 div sub } def
  /xmr { xml xw add } def
  /xmh { xw lh mul xw cw add div } def
  /xmb { xmc xmh 2 div sub } def
  /xmt { xmc xmh 2 div add } def
    xl1 cb moveto
    xr1 cb lineto
    xmm xmb lineto
    xl2 cb lineto
    xr2 cb lineto
    xmr xmc lineto
    xr2 ct lineto
    xl2 ct lineto
    xmm xmt lineto
    xr1 ct lineto
    xl1 ct lineto
    xml xmc lineto
    xl1 cb lineto
} def

/maskbird {
  backwing whitemask
  frontwing whitemask
  tail whitemask
  fillet whitemask
  body closepath whitemask
  topbeak whitemask
  bottombeak whitemask
  rightleg whitemask
  leftleg whitemask
} def

/drawcolorbird {
  backwing fillblack
  frontwing fillblack
  tail fillblack
  body blackline
  eye
  topbeak colorappendages
  bottombeak colorappendages
  rightleg colorappendages
  leftleg colorappendages
} def

/LinuxColorLogo {
  gsave
    bigL colorletters
    inuxOL colorletters
    maskbird
    drawcolorbird
  grestore
} def

100 100 translate 18 18 scale
LinuxColorLogo
showpage


%%EndDocument
 @endspecial 1179 w Fj(Linux-PCI)20 b(Support)p 0 142
1772 2 v 239 195 a Fb(pci_irq_line)f(=)h(0;)239 235 y(return)g(0;)120
274 y(})80 313 y(})0 353 y(#endif)39 b(/*)20 b(defined\(CONFIG_PCI\))f
(*/)0 448 y Fi(This)e(card)g(uses)f(one)h(IRQ)g(and)g(one)h(base)e(ad-)
0 498 y(dress)k(in)j(I/O)e(space)f(to)i(communicate)f(with)0
548 y(the)c(driver)m(.)30 b(The)17 b(lower)h(bits)f(of)h(the)g(retur)q
(ned)0 598 y(base)f(address)f(have)h(dif)q(ferent)i(meanings)f(de-)0
648 y(pending)i(if)g(the)g(address)e(is)i(an)g(I/O)f(address)0
697 y(or)14 b(a)g(memory)g(mapped)f(area)h(is)f(retur)q(ned.)18
b(On)0 747 y(an)i(I/O)g(address)e(bit)h(0)g(is)h(always)g(1)f(and)h
(bit)0 797 y(2)g(is)h(always)g(zero.)39 b(On)21 b(a)g(memory)g(mapped)0
847 y(address)14 b(type)h(the)g(lower)h(4)f(bits)g(have)g(the)f(fol-)0
897 y(lowing)i(meanings:)p 148 956 570 2 v 147 1006 2
50 v 173 991 a(Bit)p 265 1006 V 59 w(Description)p 716
1006 V 148 1007 570 2 v 148 1016 V 147 1065 2 50 v 173
1050 a(0)p 265 1065 V 92 w(always)e(zero)p 716 1065 V
148 1067 570 2 v 147 1117 2 50 v 173 1102 a(1-2)p 265
1117 V 49 w(adress)e(type:)p 716 1117 V 147 1167 V 265
1167 V 291 1152 a(00=arbitrary)i(32)e(bit,)p 716 1167
V 147 1216 V 265 1216 V 291 1202 a(01=below)h(1M,)p 716
1216 V 147 1266 V 265 1266 V 291 1251 a(10=arbitrary)h(64-bit)p
716 1266 V 148 1268 570 2 v 147 1318 2 50 v 173 1303
a(3)p 265 1318 V 92 w(prefetchable)p 716 1318 V 148 1319
570 2 v 0 1397 a(T)q(o)21 b(keep)f(things)j(simple)f(Linux)g(de\002nes)
f(two)0 1447 y(macros)16 b Fh(PCI)p 241 1447 13 2 v 15
w(BASE)p 356 1447 V 14 w(ADDRESS)p 545 1447 V 15 w(MEM)p
635 1447 V 14 w(MASK)41 b Fi(and)0 1496 y Fh(PCI)p 77
1496 V 15 w(BASE)p 192 1496 V 14 w(ADDRESS)p 381 1496
V 15 w(IO)p 446 1496 V 14 w(MASK)51 b Fi(that)26 b(can)h(be)0
1546 y(used)c(to)i(strip)f(the)g(type)f(bits)h(from)h(the)f(re-)0
1596 y(tur)q(ned)g(address.)47 b(The)24 b(prefetch)f(bit)h(is)g(set)0
1646 y(if)j(the)e(PCI-bridge)h(is)g(allowed)g(to)g(read)g(the)0
1696 y(memory)d(block)g(in)h(a)f(prefetch)f(buf)q(fer)h(with-)0
1745 y(out)18 b(problems,)h(this)f(is)g(nor)q(mally)i(the)e(case)e(if)0
1795 y(the)d(memory)g(block)g(is)f(a)h(memory)h(area)f(on)g(the)0
1845 y(PCI-device,)e(if)i(the)f(memory)h(area)g(maps)f(hard-)0
1895 y(ware)g(registers)f(into)h(memory)g(the)f(prefetch)g(bit)0
1945 y(should)j(not)g(be)e(set.)0 1995 y(There)18 b(are)h(a)f(whole)i
(bunch)f(of)g(other)f(setable)0 2045 y(and)d(readable)f(parameters)f
(in)i(the)g(con\002gura-)0 2094 y(tion)20 b(block,)h(that)f(can)f(be)g
(accessed)e(through)0 2144 y(the)h(linux)h Fh(pcibios)p
381 2144 V 15 w(XXX\(\))e Fi(routines.)32 b(Linux)0 2194
y(de\002nes)25 b(some)h(useful)h(Mnemonics)g(to)g(gain)0
2244 y(simple)c(access)f(to)i(the)f(con\002guration)i(block)0
2294 y(parameter)38 b(values)g(that)g(are)h(de\002ned)e(in)0
2344 y Fh(include/linux/pci.h)p Fi(.)53 b(The)26 b(T)q(ables)f(1,2)0
2393 y(and)13 b(3)h(will)h(describe)c(the)i(Macros)h(in)g(detail.)0
2464 y Fe(Reading)g(and)g(writing)h(to)f(a)g(device)0
2544 y Fi(Reading)19 b(and)f(writing)i(to)f(a)f(PCI)g(device)e(is)i(as)
0 2593 y(easy)10 b(as)g(reading)h(and)g(writing)h(to)e(an)h(ISA)g
(board)0 2643 y(or)20 b(reading)h(and)f(writing)i(to)e(a)g(memory)g
(area)0 2693 y(depending)14 b(on)i(the)e(base)f(address)g(type)h(of)h
(the)907 448 y(device.)907 511 y(If)23 b(the)g(device)f(uses)h(an)g
(I/O)h(type)f(base)f(ad-)907 561 y(dress,)13 b(nor)q(mal)i(I/O)f(can)g
(be)f(per)q(for)q(med)i(using)907 611 y(the)j(usual)i
Fh(inb\(\)/outb\(\),)k(inw\(\)/outw\(\))907 661 y Fi(or)d(the)g(32bit)f
Fh(inl\(\)/outl\(\))g Fi(routines.)40 b(T)q(o)907 711
y(get)16 b(an)g(impression)h(how)h(other)e(linux)i(drivers)907
760 y(use)g(this)g(access)f(modes)h(please)f(take)h(a)h(look)907
810 y(through)c(the)e(network)h(or)f(scsi)g(drivers.)907
873 y(If)34 b(the)g(device)f(uses)h(a)g(memory)h(mapped)907
923 y(area)42 b(it)h(is)f(recommended)g(to)g(use)g(the)907
973 y Fh(readb\(\)/writeb\(\),)23 b(readw\(\)/writew\(\))907
1022 y Fi(or)f(the)g(longword)i Fh(readl\(\)/writel\(\))d
Fi(rou-)907 1072 y(tines)e(to)g(read)g(or)h(write)g(to)f(a)g(single)h
(location)907 1122 y(\(see)10 b(include/asm/io.h\).)17
b Fh(memcpy\(\))10 b Fi(can)h(also)907 1172 y(be)j(used)h(to)g
(transfer)h(a)f(whole)i(memory)f(block)907 1222 y(as)23
b(this)h(is)g(the)g(case)f(on)h(framegrabber)h(de-)907
1272 y(vices)g(or)h(whatever)g(transfers)g(large)h(blocks)907
1321 y(of)18 b(data.)31 b(In)19 b(this)f(case)f(the)h(PCI-Bridge)f
(han-)907 1371 y(dles)f(automatically)i(which)g(transfer)e(mode)h(is)
907 1421 y(optimal)g(for)g(the)f(bus)g(system.)26 b(For)16
b(this)h(pur)s(-)907 1471 y(pose)h(the)h(PCI-bridge)f(has)h(inter)q
(nal)i(prefetch)907 1521 y(queues)c(\(one)i(for)h(the)e(Bus)g(side,)h
(one)g(for)g(the)907 1570 y(CPU)11 b(subsystem)f(side\))h(that)h(are)g
(used)e(to)i(store)907 1620 y(transfer)f(data)f(before)h(a)g(send)f(or)
i(receive)e(is)h(ini-)907 1670 y(tiated.)21 b(If)15 b(the)g(PREF)f
(\(prefetchable\))h(bit)g(is)g(set)907 1720 y(in)e(the)f(base)f
(address)g(bit)i(3,)f(the)g(memory)h(area)907 1770 y(is)21
b(non)i(prefetchable,)h(in)f(other)f(words)g(data)907
1820 y(and)16 b(addressed)e(are)j(dumped)e(directly)i(to)f(the)907
1869 y(bus-subsystem.)i(This)d(mode)f(is)h(intended)f(for)907
1919 y(devices)22 b(that)j(maps)f(special)g(registers)h(in)h(a)907
1969 y(memory)14 b(area)g(so)f(the)h(CPU)f(can)h(read)g(or)g(write)907
2019 y(this)h(registers)g(without)i(a)e(PCI-Bridge)g(related)907
2069 y(delay.)907 2152 y Fe(Busmastering)907 2232 y Fi(W)o(ith)e
(busmaster)g(transfer)g(mode)g(a)g(controller)907 2281
y(can)k(transfer)g(its)g(data)g(to)g(the)g(memory)h(with-)907
2331 y(out)27 b(any)h(CPU)f(action)h(by)g(driving)g(the)f(ap-)907
2381 y(propriate)21 b(bus-lines)g(on)h(a)f(hardware)i(basis.)907
2431 y(This)k(is)g(similar)h(to)f(the)g(DMA)h(transfer)f(on)907
2481 y(a)e(ISA)h(bus)e(with)j(the)e(only)h(dif)q(ference)g(that)907
2530 y(the)19 b(busmaster)s(-controller)g(sits)g(on)g(the)g(PCI-)907
2580 y(adapter)12 b(card)h(and)h(not)g(on)f(the)h(motherboard.)907
2643 y(If)37 b(a)f(device)f(is)i(busmaster)e(capable)h(the)907
2693 y Fh(PCI)p 984 2693 V 14 w(COMMAND)p 1173 2693 V
15 w(MASTER)65 b Fi(bit)42 b(should)g(have)p 0 2768 1772
2 v 478 2817 a Fd(The)6 b(Linux)g(Lab)h(Project)g(whitepapers)f
(11/1996)g(\()p Fc(http://w)q(ww)q(.ll)q(p.)q(fu)q(-b)q(er)q(lin)q(.d)q
(e/)q Fd(\))p eop
%%Page: 5 5
5 4 bop 0 118 a @beginspecial 97 @llx 57 @lly 427 @urx
380 @ury 283 @rhi @setspecial
%%BeginDocument: LinuxLogo.eps

/whitemask {
  1 setgray
  gsave
    1 setlinejoin
    0.23 setlinewidth
    stroke
  grestore
  fill
} def

/fillblack {
  0 setgray
  gsave
    0.0375 setlinewidth
    stroke
  grestore
  fill
} def

/blackline {
  0 setgray
  0.0425 setlinewidth
  stroke
} def

/colorappendages {
  0.8 0.4 0.4 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/colorletters {
  0.7 1 1 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/backwing {
  newpath
    1.3 2.2 moveto
    2.3 2.4 2.8 2.4 3.375 2.05 curveto % tail
    4.175 2.7 4.975 3.15 5.975 3.55 curveto % bottom
    4.3 5.2 4.6 7.0 5.0 8.0 curveto % front bottom
    5.1 8.2 5.1 8.8 5.0 9.0 curveto % elbow
    4.5 11.0 2.0 14.5 1.0 15.4 curveto % front top
    0.95 11.5 1.9 9.0 2.1 9.0 curveto % back top
    2.0 8.0 2.0 6.0 2.1 5.5 curveto % back middle
    2.1 5.0 1.7 3.5 1.3 2.2 curveto % back bottom
  closepath
} def

/frontwing {
  newpath
    3.0 1.4 moveto
    4.5 3.1 9.25 4.9 11.0 4.3 curveto
    13.0 4.0 15.0 4.0 18 4.5 curveto
    13.5 5.25 9.0 5.2 6.0 2.5 curveto
    5.0 2.3 4.0 1.6 3.0 1.4 curveto
  closepath
} def

/tail {
  newpath
    1.225 2.175 moveto
    0.0 2.0 lineto % top
    -0.05 1.975 -0.05 1.9 0.0 1.85 curveto % left corner
    1.0 0.45 lineto % rear
    1.1 0.3 1.2 0.325 1.4 0.4 curveto % bottom corner
    1.45 0.41 2.5 1.0 2.875 1.35 curveto % right edge
    2.1 1.1 2.0 1.1 1.9 1.1 curveto
    1.45 1.2 0.85 1.85 1.0 2.0 curveto
  closepath
} def

/fillet {
  newpath
    0.5 2.0 moveto
    4.0 3.0 lineto
    5.0 2.0 lineto
    1.5 0.65 lineto
  closepath
} def

/body {
  newpath
    2.5 1.1 moveto
    2.4 0.65 lineto
    2.5 0.6 lineto
    3.2 0.8 3.4 0.9 3.5 0.3 curveto
    3.6 0.25 lineto
    4.65 0.95 5.0 1.0 6.5 1.0 curveto
    7.2 0.895 7.0 1.2 8.15 0.8 curveto
    8.35 0.85 lineto % top of beak
    8.7 1.0 lineto % top of beak
    9.2 1.2 9.2 2.55 8.0 2.65 curveto % front of head
    7.0 2.75 7.0 2.9 6.275 3.3 curveto
} def

/eye {
  gsave
  newpath
    7.9 2.1 moveto
    8.1 2.1 8.25 1.75 8.2 1.7 curveto
    blackline
  newpath
    8.2 1.7 moveto
    8.35 1.0 8.7 1.895 8.2 1.7 curveto
    fillblack
  grestore
} def

/topbeak {
  newpath
    8.35 0.85 moveto
    8.57 0.67 8.675 0.6 8.9 0.275 curveto
    8.9 0.0 8.9 -0.01 8.85 -0.15 curveto
    9.25 0.25 9.15 0.4 9.0 0.5 curveto % bottom right
    8.95 0.525 8.65 0.725 8.7 1.0 curveto % top right
  closepath
} def

/bottombeak {
  newpath
    8.15 0.8 moveto
    8.55 0.15 8.25 -0.2 8.60 -0.125 curveto
    8.345 0.525 8.375 0.725 8.35 0.85 curveto % top right
    8.15 0.8 lineto
  closepath
} def

/rightleg {
  newpath
    3.5 0.3 moveto
    3.1 -0.1 lineto
    3.3 -1.0 lineto
    3.2 -1.2 lineto
    3.22 -1.21 lineto
    3.0 -1.8 lineto
    3.2 -1.8 lineto
    3.0 -2.25 lineto
    3.3 -2.0 lineto
    3.32 -2.15 lineto
    3.45 -1.5 lineto
    3.425 -1.0 lineto
    3.25 -0.15 lineto
    3.6 0.25 lineto
    3.5 0.3 lineto
  closepath
} def

/leftleg {
  newpath
    2.4 0.65 moveto
    2.0 0.25 lineto
    2.2 -0.65 lineto
    2.1 -0.85 lineto
    2.12 -0.86 lineto
    1.9 -1.45 lineto
    2.1 -1.45 lineto
    1.9 -1.9 lineto
    2.2 -1.65 lineto
    2.22 -1.8 lineto
    2.35 -1.15 lineto
    2.325 -0.65 lineto
    2.15 0.2 lineto
    2.5 0.6 lineto
    2.4 0.65 lineto
  closepath
} def

/bigL {
  newpath
    2.01 0 moveto
    9.65 0 lineto
    9.65 3 lineto
    5 3 lineto
    5 13 lineto
    2.01 13 lineto
  closepath
} def

/inuxOL {
  /oy 0.0 def
  /lw 0.5 def
  /lh 3.0 def
  /ls 0.5 def
  /cw 0.7 def
  /nadj 2.8 def
  /xadj 1.05 def
  /xsadj 0.7 def
  /ox { 9.65 ls add } def
  /cb { oy } def
  /ct { cb lh add } def
% I
  /il { ox } def
  /ir { il lw add } def
  newpath
    il cb moveto
    ir cb lineto
    ir ct lineto
    il ct lineto
    il cb lineto
% N
  /nl1 { ir ls add } def
  /nr1 { nl1 lw add } def
  /nt1 { ct nadj lw mul sub } def
  /nl2 { nr1 cw add } def
  /nr2 { nl2 lw add } def
  /nt2 { cb nadj lw mul add } def
    nl1 cb moveto
    nr1 cb lineto
    nr1 nt1 lineto
    nl2 cb lineto
    nr2 cb lineto
    nr2 ct lineto
    nl2 ct lineto
    nl2 nt2 lineto
    nr1 ct lineto
    nl1 ct lineto
    nl1 cb lineto
% U
  /ul1 { nr2 ls add } def
  /ur1 { ul1 lw add } def
  /uc { cb lw add } def
  /ul2 { ur1 cw add } def
  /ur2 { ul2 lw add } def
    ul1 cb moveto
    ur2 cb lineto
    ur2 ct lineto
    ul2 ct lineto
    ul2 uc lineto
    ur1 uc lineto
    ur1 ct lineto
    ul1 ct lineto
    ul1 cb lineto
% X
  /xw { lw xadj mul } def
  /xl1 { ur2 ls xsadj mul add } def
  /xr1 { xl1 xw add } def
  /xl2 { xr1 cw add } def
  /xr2 { xl2 xw add } def
  /xmc { cb lh 2 div add } def
  /xmm { xr1 cw 2 div add } def
  /xml { xmm xw 2 div sub } def
  /xmr { xml xw add } def
  /xmh { xw lh mul xw cw add div } def
  /xmb { xmc xmh 2 div sub } def
  /xmt { xmc xmh 2 div add } def
    xl1 cb moveto
    xr1 cb lineto
    xmm xmb lineto
    xl2 cb lineto
    xr2 cb lineto
    xmr xmc lineto
    xr2 ct lineto
    xl2 ct lineto
    xmm xmt lineto
    xr1 ct lineto
    xl1 ct lineto
    xml xmc lineto
    xl1 cb lineto
} def

/maskbird {
  backwing whitemask
  frontwing whitemask
  tail whitemask
  fillet whitemask
  body closepath whitemask
  topbeak whitemask
  bottombeak whitemask
  rightleg whitemask
  leftleg whitemask
} def

/drawcolorbird {
  backwing fillblack
  frontwing fillblack
  tail fillblack
  body blackline
  eye
  topbeak colorappendages
  bottombeak colorappendages
  rightleg colorappendages
  leftleg colorappendages
} def

/LinuxColorLogo {
  gsave
    bigL colorletters
    inuxOL colorletters
    maskbird
    drawcolorbird
  grestore
} def

100 100 translate 18 18 scale
LinuxColorLogo
showpage


%%EndDocument
 @endspecial 1179 w Fj(Linux-PCI)20 b(Support)p 0 142
1772 2 v 0 195 a Fi(been)45 b(set)f(in)j(the)e Fh(PCI)p
519 195 13 2 v 15 w(COMMAND)g Fi(regis-)0 245 y(ter)m(.)61
b(If)29 b(a)f(busmaster)f(transfer)i(has)f(been)0 295
y(aborted)34 b(by)h(the)g(busmaster)e(device,)39 b(the)0
345 y Fh(PCI)p 77 345 V 15 w(STATUS)p 242 345 V 14 w(REC)p
331 345 V 15 w(MASTER)p 496 345 V 14 w(ABORT)24 b Fi(bit)h(in)g(the)907
195 y Fh(PCI)p 984 195 V 14 w(STATUS)12 b Fi(register)g(is)g(set,)g(on)
g(the)g(receiving)907 245 y(end)i(an)g(abort)h(can)f(be)f(noti\002ed)h
(by)h(looking)h(on)907 295 y(the)d Fh(PCI)p 1062 295
V 14 w(STATUS)p 1226 295 V 15 w(REC)p 1316 295 V 14 w(TARGET)p
1480 295 V 15 w(ABORT)37 b Fi(bit.)p 709 445 355 6 v
0 500 1834 2 v -1 550 2 50 v 25 535 a(Macro)p 567 550
V 576 550 V 451 w(W)o(idth)p 746 550 V 50 w(Description)p
1833 550 V 0 552 1834 2 v 0 560 V -1 660 2 100 v 25 595
a Fh(PCI)p 102 595 13 2 v 15 w(VENDOR)p 267 595 V 14
w(ID)p 567 660 2 100 v 576 660 V 272 w Fi(16bit)p 746
660 V 64 w(Unique)15 b(V)m(endor)f(ID)g(\(see)f Fh(pci.h)p
Fi(\))h(This)g(ID)g(is)f(de\002ned)g(by)771 645 y(the)g(PCI)g
(consortium)p 1833 660 V 0 661 1834 2 v -1 761 2 100
v 25 696 a Fh(PCI)p 102 696 13 2 v 15 w(DEVICE)p 267
696 V 14 w(ID)p 567 761 2 100 v 576 761 V 272 w Fi(16bit)p
746 761 V 64 w(Unique)i(Device)e(ID)i(\(see)e Fh(pci.h)p
Fi(\))h(this)g(is)g(de\002ned)f(by)h(the)771 746 y(vendor)f(unique)i
(for)f(each)f(device)p 1833 761 V 0 763 1834 2 v -1 862
2 100 v 25 798 a Fh(PCI)p 102 798 13 2 v 15 w(COMMAND)p
567 862 2 100 v 576 862 V 311 w Fi(16bit)p 746 862 V
64 w(This)20 b(\002eld)e(is)i(used)e(for)i(device)e(speci\002c)f
(con\002guration)771 847 y(commands)c(\(see)g(table)g(2\))p
1833 862 V 0 864 1834 2 v -1 964 2 100 v 25 899 a Fh(PCI)p
102 899 13 2 v 15 w(STATUS)p 567 964 2 100 v 576 964
V 336 w Fi(16bit)p 746 964 V 64 w(This)20 b(is)f(used)f(for)i(board)f
(speci\002c)f(status)g(results)h(\(see)771 949 y(table)13
b(3\))p 1833 964 V 0 965 1834 2 v -1 1065 2 100 v 25
1000 a Fh(PCI)p 102 1000 13 2 v 15 w(CLASS)p 242 1000
V 14 w(REVISION)p 567 1065 2 100 v 576 1065 V 147 w Fi(32bit)p
746 1065 V 64 w(The)i(high)i(24bits)d(are)i(used)e(to)h(deter)q(mine)g
(the)g(device's)771 1050 y(class)e(type)g(the)g(low)h(8bit)f(for)h
(revision)g(code)p 1833 1065 V 0 1067 1834 2 v -1 1116
2 50 v 25 1101 a Fh(PCI)p 102 1101 13 2 v 15 w(CLASS)p
242 1101 V 14 w(DEVICE)p 567 1116 2 50 v 576 1116 V 746
1116 V 367 w Fi(The)f(device's)f(class)g(code)h(\(see)f(pci.h\))p
1833 1116 V 0 1118 1834 2 v -1 1317 2 200 v 25 1153 a
Fh(PCI)p 102 1153 13 2 v 15 w(BIST)p 567 1317 2 200 v
576 1317 V 386 w Fi(8bit)p 746 1317 V 90 w(If)17 b Fh(PCI)p
892 1153 13 2 v 15 w(BIST)p 1007 1153 V 14 w(CAPABLE)f
Fi(is)g(set)g(the)g(device)f(can)h(per)q(for)q(m)771
1203 y(a)j(Build-in)h(self)e(test)g(that)h(can)f(be)h(started)e(by)i
(writing)771 1253 y Fh(PCI)p 848 1253 V 15 w(BIST)p 963
1253 V 15 w(START)g Fi(to)h(this)g(\002eld.)37 b(The)19
b(result)i(mask)e(is)771 1302 y Fh(PCI)p 848 1302 V 15
w(BIST)p 963 1302 V 15 w(CODE)p 1078 1302 V 14 w(MASK)p
1833 1317 2 200 v 0 1319 1834 2 v -1 1419 2 100 v 25
1354 a(PCI)p 102 1354 13 2 v 15 w(HEADER)p 267 1354 V
14 w(TYPE)p 567 1419 2 100 v 576 1419 V 222 w Fi(8bit)p
746 1419 V 90 w(Speci\002es)13 b(the)h(Layout)h(type)f(for)h(the)f
(following)j(48)d(bytes)771 1404 y(in)g(PCI)f(con\002guration)i
(\(currently)g(only)g(0x0\))p 1833 1419 V 0 1420 1834
2 v -1 1520 2 100 v 25 1455 a Fh(PCI)p 102 1455 13 2
v 15 w(LATENCY)p 292 1455 V 14 w(TIMER)p 567 1520 2 100
v 576 1520 V 172 w Fi(8bit)p 746 1520 V 90 w(This)f(is)h(the)e(maximal)
j(time)e(a)g(PCI)f(cycle)h(may)g(consume)771 1505 y
(\(time=latency+8cycles\))p 1833 1520 V 0 1522 1834 2
v -1 1571 2 50 v 25 1556 a Fh(PCI)p 102 1556 13 2 v 15
w(CACHE)p 242 1556 V 14 w(LINE)p 356 1556 V 15 w(SIZE)p
567 1571 2 50 v 576 1571 V 132 w Fi(8bit)p 746 1571 V
90 w(Speci\002es)e(the)h(Cache-Line)g(Size)g(in)i(units)e(of)h
(32bytes,)p 1833 1571 V 0 1573 1834 2 v -1 1772 2 200
v 25 1608 a Fh(PCI)p 102 1608 13 2 v 15 w(BASE)p 217
1608 V 14 w(ADDRESS)p 406 1608 V 14 w([0-5])p 567 1772
2 200 v 576 1772 V 58 w Fi(32bit)p 746 1772 V 64 w(This)k(are)g(up)g
(to)g(6)f(memory)i(locations)f(the)g(device)e(can)771
1658 y(map)k(its)h(memory)f(area\(s\))i(to.)38 b(The)20
b(lower)h(4)f(bits)g(are)771 1707 y(used)12 b(to)h(specify)f(the)h
(type)f(and)h(the)g(access)e(mode)h(of)h(the)771 1757
y(memory)h(area.)p 1833 1772 V 0 1774 1834 2 v -1 1874
2 100 v 25 1809 a Fh(PCI)p 102 1809 13 2 v 15 w(ROM)p
192 1809 V 14 w(ADDRESS)p 567 1874 2 100 v 576 1874 V
222 w Fi(32bit)p 746 1874 V 64 w(bit)j(11-31)f(is)h(the)g(start)f
(address)g(of)i(the)e(device's)g(ROM)771 1859 y(area.)h(\(write)d(bit)g
(1)f(to)g(enable)g(ROM\))p 1833 1874 V 0 1875 1834 2
v -1 1925 2 50 v 25 1910 a Fh(PCI)p 102 1910 13 2 v 15
w(MIN)p 192 1910 V 14 w(GNT)p 567 1925 2 50 v 576 1925
V 322 w Fi(8bit)p 746 1925 V 90 w(minimal)i(latency)f(time)f(\(vendor)h
(speci\002c\))p 1833 1925 V 0 1927 1834 2 v -1 1976 2
50 v 25 1962 a Fh(PCI)p 102 1962 13 2 v 15 w(MIN)p 192
1962 V 14 w(LAT)p 567 1976 2 50 v 576 1976 V 322 w Fi(8bit)p
746 1976 V 90 w(maximal)h(latency)e(time)h(\(vendor)f(speci\002c\))p
1833 1976 V 0 1978 1834 2 v -1 2078 2 100 v 25 2013 a
Fh(PCI)p 102 2013 13 2 v 15 w(INTERRUPT)p 342 2013 V
14 w(PIN)p 567 2078 2 100 v 576 2078 V 172 w Fi(8bit)p
746 2078 V 90 w(This)g(entry)g(denotes)f(the)g(IRQ)h(pin)g(that)g
(should)g(be)f(used)771 2063 y(1=INTA)h(2=INTB)f(0=disabled)p
1833 2078 V 0 2079 1834 2 v -1 2179 2 100 v 25 2114 a
Fh(PCI)p 102 2114 13 2 v 15 w(INTERRUPT)p 342 2114 V
14 w(LINE)p 567 2179 2 100 v 576 2179 V 147 w Fi(8bit)p
746 2179 V 90 w(This)j(entry)g(speci\002es)d(the)i(interrupt)h(line)g
(on)g(which)g(the)771 2164 y(device)d(IRQ)h(is)h(mapped)e(\(usually)j
(IRQ)e(0-15\))p 1833 2179 V 0 2181 1834 2 v 424 2257
a(T)q(able)f(1:)17 b(The)c(Linux)h(PCI-Con\002guration)h(macros)p
0 2768 1772 2 v 478 2817 a Fd(The)6 b(Linux)g(Lab)h(Project)g
(whitepapers)f(11/1996)g(\()p Fc(http://w)q(ww)q(.ll)q(p.)q(fu)q(-b)q
(er)q(lin)q(.d)q(e/)q Fd(\))p eop
%%Page: 6 6
6 5 bop 0 118 a @beginspecial 97 @llx 57 @lly 427 @urx
380 @ury 283 @rhi @setspecial
%%BeginDocument: LinuxLogo.eps

/whitemask {
  1 setgray
  gsave
    1 setlinejoin
    0.23 setlinewidth
    stroke
  grestore
  fill
} def

/fillblack {
  0 setgray
  gsave
    0.0375 setlinewidth
    stroke
  grestore
  fill
} def

/blackline {
  0 setgray
  0.0425 setlinewidth
  stroke
} def

/colorappendages {
  0.8 0.4 0.4 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/colorletters {
  0.7 1 1 setrgbcolor
  gsave
    fill
  grestore
  blackline
} def

/backwing {
  newpath
    1.3 2.2 moveto
    2.3 2.4 2.8 2.4 3.375 2.05 curveto % tail
    4.175 2.7 4.975 3.15 5.975 3.55 curveto % bottom
    4.3 5.2 4.6 7.0 5.0 8.0 curveto % front bottom
    5.1 8.2 5.1 8.8 5.0 9.0 curveto % elbow
    4.5 11.0 2.0 14.5 1.0 15.4 curveto % front top
    0.95 11.5 1.9 9.0 2.1 9.0 curveto % back top
    2.0 8.0 2.0 6.0 2.1 5.5 curveto % back middle
    2.1 5.0 1.7 3.5 1.3 2.2 curveto % back bottom
  closepath
} def

/frontwing {
  newpath
    3.0 1.4 moveto
    4.5 3.1 9.25 4.9 11.0 4.3 curveto
    13.0 4.0 15.0 4.0 18 4.5 curveto
    13.5 5.25 9.0 5.2 6.0 2.5 curveto
    5.0 2.3 4.0 1.6 3.0 1.4 curveto
  closepath
} def

/tail {
  newpath
    1.225 2.175 moveto
    0.0 2.0 lineto % top
    -0.05 1.975 -0.05 1.9 0.0 1.85 curveto % left corner
    1.0 0.45 lineto % rear
    1.1 0.3 1.2 0.325 1.4 0.4 curveto % bottom corner
    1.45 0.41 2.5 1.0 2.875 1.35 curveto % right edge
    2.1 1.1 2.0 1.1 1.9 1.1 curveto
    1.45 1.2 0.85 1.85 1.0 2.0 curveto
  closepath
} def

/fillet {
  newpath
    0.5 2.0 moveto
    4.0 3.0 lineto
    5.0 2.0 lineto
    1.5 0.65 lineto
  closepath
} def

/body {
  newpath
    2.5 1.1 moveto
    2.4 0.65 lineto
    2.5 0.6 lineto
    3.2 0.8 3.4 0.9 3.5 0.3 curveto
    3.6 0.25 lineto
    4.65 0.95 5.0 1.0 6.5 1.0 curveto
    7.2 0.895 7.0 1.2 8.15 0.8 curveto
    8.35 0.85 lineto % top of beak
    8.7 1.0 lineto % top of beak
    9.2 1.2 9.2 2.55 8.0 2.65 curveto % front of head
    7.0 2.75 7.0 2.9 6.275 3.3 curveto
} def

/eye {
  gsave
  newpath
    7.9 2.1 moveto
    8.1 2.1 8.25 1.75 8.2 1.7 curveto
    blackline
  newpath
    8.2 1.7 moveto
    8.35 1.0 8.7 1.895 8.2 1.7 curveto
    fillblack
  grestore
} def

/topbeak {
  newpath
    8.35 0.85 moveto
    8.57 0.67 8.675 0.6 8.9 0.275 curveto
    8.9 0.0 8.9 -0.01 8.85 -0.15 curveto
    9.25 0.25 9.15 0.4 9.0 0.5 curveto % bottom right
    8.95 0.525 8.65 0.725 8.7 1.0 curveto % top right
  closepath
} def

/bottombeak {
  newpath
    8.15 0.8 moveto
    8.55 0.15 8.25 -0.2 8.60 -0.125 curveto
    8.345 0.525 8.375 0.725 8.35 0.85 curveto % top right
    8.15 0.8 lineto
  closepath
} def

/rightleg {
  newpath
    3.5 0.3 moveto
    3.1 -0.1 lineto
    3.3 -1.0 lineto
    3.2 -1.2 lineto
    3.22 -1.21 lineto
    3.0 -1.8 lineto
    3.2 -1.8 lineto
    3.0 -2.25 lineto
    3.3 -2.0 lineto
    3.32 -2.15 lineto
    3.45 -1.5 lineto
    3.425 -1.0 lineto
    3.25 -0.15 lineto
    3.6 0.25 lineto
    3.5 0.3 lineto
  closepath
} def

/leftleg {
  newpath
    2.4 0.65 moveto
    2.0 0.25 lineto
    2.2 -0.65 lineto
    2.1 -0.85 lineto
    2.12 -0.86 lineto
    1.9 -1.45 lineto
    2.1 -1.45 lineto
    1.9 -1.9 lineto
    2.2 -1.65 lineto
    2.22 -1.8 lineto
    2.35 -1.15 lineto
    2.325 -0.65 lineto
    2.15 0.2 lineto
    2.5 0.6 lineto
    2.4 0.65 lineto
  closepath
} def

/bigL {
  newpath
    2.01 0 moveto
    9.65 0 lineto
    9.65 3 lineto
    5 3 lineto
    5 13 lineto
    2.01 13 lineto
  closepath
} def

/inuxOL {
  /oy 0.0 def
  /lw 0.5 def
  /lh 3.0 def
  /ls 0.5 def
  /cw 0.7 def
  /nadj 2.8 def
  /xadj 1.05 def
  /xsadj 0.7 def
  /ox { 9.65 ls add } def
  /cb { oy } def
  /ct { cb lh add } def
% I
  /il { ox } def
  /ir { il lw add } def
  newpath
    il cb moveto
    ir cb lineto
    ir ct lineto
    il ct lineto
    il cb lineto
% N
  /nl1 { ir ls add } def
  /nr1 { nl1 lw add } def
  /nt1 { ct nadj lw mul sub } def
  /nl2 { nr1 cw add } def
  /nr2 { nl2 lw add } def
  /nt2 { cb nadj lw mul add } def
    nl1 cb moveto
    nr1 cb lineto
    nr1 nt1 lineto
    nl2 cb lineto
    nr2 cb lineto
    nr2 ct lineto
    nl2 ct lineto
    nl2 nt2 lineto
    nr1 ct lineto
    nl1 ct lineto
    nl1 cb lineto
% U
  /ul1 { nr2 ls add } def
  /ur1 { ul1 lw add } def
  /uc { cb lw add } def
  /ul2 { ur1 cw add } def
  /ur2 { ul2 lw add } def
    ul1 cb moveto
    ur2 cb lineto
    ur2 ct lineto
    ul2 ct lineto
    ul2 uc lineto
    ur1 uc lineto
    ur1 ct lineto
    ul1 ct lineto
    ul1 cb lineto
% X
  /xw { lw xadj mul } def
  /xl1 { ur2 ls xsadj mul add } def
  /xr1 { xl1 xw add } def
  /xl2 { xr1 cw add } def
  /xr2 { xl2 xw add } def
  /xmc { cb lh 2 div add } def
  /xmm { xr1 cw 2 div add } def
  /xml { xmm xw 2 div sub } def
  /xmr { xml xw add } def
  /xmh { xw lh mul xw cw add div } def
  /xmb { xmc xmh 2 div sub } def
  /xmt { xmc xmh 2 div add } def
    xl1 cb moveto
    xr1 cb lineto
    xmm xmb lineto
    xl2 cb lineto
    xr2 cb lineto
    xmr xmc lineto
    xr2 ct lineto
    xl2 ct lineto
    xmm xmt lineto
    xr1 ct lineto
    xl1 ct lineto
    xml xmc lineto
    xl1 cb lineto
} def

/maskbird {
  backwing whitemask
  frontwing whitemask
  tail whitemask
  fillet whitemask
  body closepath whitemask
  topbeak whitemask
  bottombeak whitemask
  rightleg whitemask
  leftleg whitemask
} def

/drawcolorbird {
  backwing fillblack
  frontwing fillblack
  tail fillblack
  body blackline
  eye
  topbeak colorappendages
  bottombeak colorappendages
  rightleg colorappendages
  leftleg colorappendages
} def

/LinuxColorLogo {
  gsave
    bigL colorletters
    inuxOL colorletters
    maskbird
    drawcolorbird
  grestore
} def

100 100 translate 18 18 scale
LinuxColorLogo
showpage


%%EndDocument
 @endspecial 1179 w Fj(Linux-PCI)20 b(Support)p 0 142
1772 2 v 144 429 1483 2 v 143 479 2 50 v 169 464 a Fi(Macro)p
746 479 V 478 w(Description)p 1626 479 V 144 480 1483
2 v 144 489 V 143 539 2 50 v 169 524 a Fh(PCI)p 246 524
13 2 v 15 w(COMMAND)p 436 524 V 14 w(IO)p 746 539 2 50
v 274 w Fi(Enable)14 b(I/O)f(area)p 1626 539 V 144 540
1483 2 v 143 590 2 50 v 169 575 a Fh(PCI)p 246 575 13
2 v 15 w(COMMAND)p 436 575 V 14 w(MEMORY)p 746 590 2
50 v 174 w Fi(Enable)h(Memory)g(area)p 1626 590 V 144
592 1483 2 v 143 642 2 50 v 169 627 a Fh(PCI)p 246 627
13 2 v 15 w(COMMAND)p 436 627 V 14 w(MASTER)p 746 642
2 50 v 174 w Fi(Enable)g(Busmastering)p 1626 642 V 144
643 1483 2 v 143 693 2 50 v 169 678 a Fh(PCI)p 246 678
13 2 v 15 w(COMMAND)p 436 678 V 14 w(SPECIAL)p 746 693
2 50 v 149 w Fi(Enable)g(response)e(to)h(special)g(cycles)p
1626 693 V 144 695 1483 2 v 143 744 2 50 v 169 730 a
Fh(PCI)p 246 730 13 2 v 15 w(COMMAND)p 436 730 V 14 w(INVALIDATE)p
746 744 2 50 v 74 w Fi(Use)g(memory)h(write)f(and)h(invalidate)p
1626 744 V 144 746 1483 2 v 143 796 2 50 v 169 781 a
Fh(PCI)p 246 781 13 2 v 15 w(COMMAND)p 436 781 V 14 w(VGA)p
525 781 V 15 w(PALETTE)p 746 796 2 50 v 59 w Fi(Enable)g(video)e
(palette)h(access)p 1626 796 V 144 798 1483 2 v 143 847
2 50 v 169 832 a Fh(PCI)p 246 832 13 2 v 15 w(COMMAND)p
436 832 V 14 w(PARITY)p 746 847 2 50 v 174 w Fi(Enable)h(parity)g
(checking)p 1626 847 V 144 849 1483 2 v 143 899 2 50
v 169 884 a Fh(PCI)p 246 884 13 2 v 15 w(COMMAND)p 436
884 V 14 w(WAIT)p 746 899 2 50 v 224 w Fi(Enable)g(address/data)d
(stepping)p 1626 899 V 144 901 1483 2 v 143 950 2 50
v 169 935 a Fh(PCI)p 246 935 13 2 v 15 w(COMMAND)p 436
935 V 14 w(SERR)p 746 950 2 50 v 224 w Fi(Enable)j(SERR)p
1626 950 V 144 952 1483 2 v 143 1002 2 50 v 169 987 a
Fh(PCI)p 246 987 13 2 v 15 w(COMMAND)p 436 987 V 14 w(FAST)p
550 987 V 15 w(BACK)p 746 1002 2 50 v 109 w Fi(Enable)g(back-to-back)c
(writes)p 1626 1002 V 144 1003 1483 2 v 413 1079 a(T)q(able)i(2:)17
b(The)c(Linux)h(PCI-Command)f(Bit-Settings)p 0 1717 1922
2 v -1 1767 2 50 v 25 1752 a(Macro)p 1040 1767 V 916
w(Description)p 1920 1767 V 0 1769 1922 2 v 0 1777 V
-1 1827 2 50 v 25 1812 a Fh(PCI)p 102 1812 13 2 v 15
w(STATUS)p 267 1812 V 14 w(66MHZ)p 1040 1827 2 50 v 662
w Fi(Support)h(66)e(Mhz)i(PCI)f(2.1)g(bus)p 1920 1827
V 0 1829 1922 2 v -1 1878 2 50 v 25 1863 a Fh(PCI)p 102
1863 13 2 v 15 w(STATUS)p 267 1863 V 14 w(UDF)p 1040
1878 2 50 v 712 w Fi(Support)h(User)f(De\002nable)g(Features)p
1920 1878 V 0 1880 1922 2 v -1 1930 2 50 v 25 1915 a
Fh(PCI)p 102 1915 13 2 v 15 w(STATUS)p 267 1915 V 14
w(FAST)p 381 1915 V 15 w(BACK)p 1040 1930 2 50 v 572
w Fi(Accept)f(fast-back)g(to)h(back)p 1920 1930 V 0 1932
1922 2 v -1 1981 2 50 v 25 1966 a Fh(PCI)p 102 1966 13
2 v 15 w(STATUS)p 267 1966 V 14 w(PARITY)p 1040 1981
2 50 v 637 w Fi(Detected)e(parity)j(error)p 1920 1981
V 0 1983 1922 2 v -1 2033 2 50 v 25 2018 a Fh(PCI)p 102
2018 13 2 v 15 w(STATUS)p 267 2018 V 14 w(DEVSEL)p 431
2018 V 14 w([MASK|FAST|MEDIUM|SLOW])p 1040 2033 2 50
v 48 w Fi(DEVSEL)g(timing)p 1920 2033 V 0 2034 1922 2
v -1 2084 2 50 v 25 2069 a Fh(PCI)p 102 2069 13 2 v 15
w(STATUS)p 267 2069 V 14 w(SIG)p 356 2069 V 15 w(TARGET)p
521 2069 V 14 w(ABORT)p 1040 2084 2 50 v 408 w Fi(Set)f(on)h(target)f
(abort)p 1920 2084 V 0 2086 1922 2 v -1 2136 2 50 v 25
2121 a Fh(PCI)p 102 2121 13 2 v 15 w(STATUS)p 267 2121
V 14 w(REC)p 356 2121 V 15 w(TARGET)p 521 2121 V 14 w(ABORT)p
1040 2136 2 50 v 408 w Fi(Master)g(ack)f(of)p 1920 2136
V 0 2137 1922 2 v -1 2187 2 50 v 25 2172 a Fh(PCI)p 102
2172 13 2 v 15 w(STATUS)p 267 2172 V 14 w(REC)p 356 2172
V 15 w(MASTER)p 521 2172 V 14 w(ABORT)p 1040 2187 2 50
v 408 w Fi(Set)h(on)h(master)f(abort)p 1920 2187 V 0
2189 1922 2 v -1 2239 2 50 v 25 2224 a Fh(PCI)p 102 2224
13 2 v 15 w(STATUS)p 267 2224 V 14 w(SIG)p 356 2224 V
15 w(SYSTEM)p 521 2224 V 14 w(ERROR)p 1040 2239 2 50
v 408 w Fi(Set)g(when)h(we)f(drive)g(SERR)p 1920 2239
V 0 2240 1922 2 v -1 2290 2 50 v 25 2275 a Fh(PCI)p 102
2275 13 2 v 15 w(STATUS)p 267 2275 V 14 w(DETECTED)p
481 2275 V 14 w(PARITY)p 1040 2290 2 50 v 423 w Fi(Set)g(on)h(parity)g
(error)p 1920 2290 V 0 2292 1922 2 v 451 2367 a(T)q(able)f(3:)j(The)d
(Linux)h(PCI-Status)f(Bit-Settings)p 0 2768 1772 2 v
478 2817 a Fd(The)6 b(Linux)g(Lab)h(Project)g(whitepapers)f(11/1996)g
(\()p Fc(http://w)q(ww)q(.ll)q(p.)q(fu)q(-b)q(er)q(lin)q(.d)q(e/)q
Fd(\))p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
